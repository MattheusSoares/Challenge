{"version":3,"sources":["webpack:///node_modules/angular-gauge/__ivy_ngcc__/fesm2015/angular-gauge.js","webpack:///node_modules/svg-gauge/index.js","webpack:///node_modules/svg-gauge/src/gauge.js"],"names":["GaugeDefaults","dialStartAngle","dialEndAngle","dialRadius","min","max","showValue","gaugeClass","dialClass","valueDialClass","valueClass","animated","GaugeComponent","elm","defaults","gaugeCreated","EventEmitter","options","label","value","color","Object","keys","forEach","optionKey","gauge","nativeElement","emit","updateValue","changes","setValueAnimated","animationDuration","setValue","ɵfac","GaugeComponent_Factory","t","ɵcmp","type","selectors","inputs","outputs","features","decls","vars","template","GaugeComponent_Template","rf","ctx","encapsulation","ctorParameters","ElementRef","propDecorators","Input","Output","ngDevMode","Component","args","selector","USER_DEFAULTS","InjectionToken","defaultsFactory","userDefaults","assign","GaugeModule","ngModule","providers","provide","useValue","useFactory","deps","GaugeModule_Factory","ɵmod","ɵinj","NgModule","declarations","exports","ngJitMode","module","global","factory","Gauge","window","undefined","document","slice","Array","prototype","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","cb","setTimeout","Animation","duration","currentIteration","iterations","start","end","change","step","easing","easeInOutCubic","pos","Math","pow","animate","progress","SVG_NS","centerX","centerY","defaultOptions","gaugeColor","val","round","shallowCopy","target","arguments","sources","call","s","k","hasOwnProperty","svg","name","attrs","children","elem","createElementNS","attrName","setAttribute","c","appendChild","getAngle","percentage","gaugeSpanAngle","normalize","limit","Number","getValueInPercentage","newMax","newVal","getCartesian","cx","cy","radius","angle","rad","PI","x","cos","y","sin","getDialCoords","startAngle","endAngle","opts","gaugeContainer","displayValue","valueTextClass","valueLabelClass","gaugeValueElem","gaugeValuePath","viewBox","instance","console","log","tmp","pathString","largeArc","coords","largeArcFlag","join","initializeGauge","fill","stroke","d","abs","flag","gaugeElement","updateGauge","theValue","frame","textContent","setGaugeColor","dur","pathTransition","style","setMaxValue","oldVal","getValue"],"mappings":"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","file":"default-node_modules_angular-gauge___ivy_ngcc___fesm2015_angular-gauge_js-es5.js","sourcesContent":["import { EventEmitter, Component, ElementRef, Input, Output, InjectionToken, NgModule } from '@angular/core';\nimport Gauge from 'svg-gauge';\n\nimport * as ɵngcc0 from '@angular/core';\nclass GaugeDefaults {\n    constructor() {\n        /**\n         * The angle in degrees to start the dial\n         */\n        this.dialStartAngle = 135;\n        /**\n         * The angle in degrees to end the dial. This MUST be less than dialStartAngle\n         */\n        this.dialEndAngle = 45;\n        /**\n         * The radius of the gauge\n         */\n        this.dialRadius = 40;\n        /**\n         * The minimum value for the gauge\n         */\n        this.min = 0;\n        /**\n         * The maximum value for the gauge\n         */\n        this.max = 100;\n        /**\n         * Whether to show the value at the center of the gauge\n         */\n        this.showValue = true;\n        /**\n         * The CSS class of the gauge\n         */\n        this.gaugeClass = 'gauge';\n        /**\n         * The CSS class of the gauge's dial\n         */\n        this.dialClass = 'dial';\n        /**\n         * The CSS class of the gauge's fill (value dial)\n         */\n        this.valueDialClass = 'value';\n        /**\n         * \tThe CSS class of the gauge's text\n         */\n        this.valueClass = 'value-text';\n        /**\n         * Whether to animate changing the gauge\n         */\n        this.animated = false;\n    }\n}\n\nclass GaugeComponent {\n    constructor(elm, defaults) {\n        this.elm = elm;\n        this.defaults = defaults;\n        /**\n         * Called when the gauge is created\n         */\n        this.gaugeCreated = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        const options = {\n            dialStartAngle: this.dialStartAngle,\n            dialEndAngle: this.dialEndAngle,\n            dialRadius: this.dialRadius,\n            min: this.min,\n            max: this.max,\n            label: this.label,\n            showValue: this.showValue,\n            gaugeClass: this.gaugeClass,\n            dialClass: this.dialClass,\n            valueDialClass: this.valueDialClass,\n            valueClass: this.valueClass,\n            value: this.value,\n            color: this.color,\n        };\n        Object.keys(this.defaults).forEach((optionKey) => {\n            if (typeof options[optionKey] === 'undefined') {\n                options[optionKey] = this.defaults[optionKey];\n            }\n        });\n        Object.keys(options).forEach((optionKey) => {\n            if (typeof options[optionKey] === 'undefined') {\n                delete options[optionKey];\n            }\n        });\n        this.gauge = Gauge(this.elm.nativeElement, options);\n        this.gaugeCreated.emit({ gauge: this.gauge });\n        this.updateValue();\n    }\n    ngOnChanges(changes) {\n        if (changes['value']) {\n            this.updateValue();\n        }\n    }\n    updateValue() {\n        if (this.gauge) {\n            if (this.animated) {\n                this.gauge.setValueAnimated(this.value, this.animationDuration);\n            }\n            else {\n                this.gauge.setValue(this.value);\n            }\n        }\n    }\n}\nGaugeComponent.ɵfac = function GaugeComponent_Factory(t) { return new (t || GaugeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GaugeDefaults)); };\nGaugeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: GaugeComponent, selectors: [[\"mwl-gauge\"]], inputs: { dialStartAngle: \"dialStartAngle\", dialEndAngle: \"dialEndAngle\", dialRadius: \"dialRadius\", min: \"min\", max: \"max\", label: \"label\", color: \"color\", showValue: \"showValue\", gaugeClass: \"gaugeClass\", dialClass: \"dialClass\", valueDialClass: \"valueDialClass\", valueClass: \"valueClass\", value: \"value\", animated: \"animated\", animationDuration: \"animationDuration\" }, outputs: { gaugeCreated: \"gaugeCreated\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function GaugeComponent_Template(rf, ctx) { }, encapsulation: 2 });\nGaugeComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: GaugeDefaults }\n];\nGaugeComponent.propDecorators = {\n    dialStartAngle: [{ type: Input }],\n    dialEndAngle: [{ type: Input }],\n    dialRadius: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    label: [{ type: Input }],\n    color: [{ type: Input }],\n    showValue: [{ type: Input }],\n    gaugeClass: [{ type: Input }],\n    dialClass: [{ type: Input }],\n    valueDialClass: [{ type: Input }],\n    valueClass: [{ type: Input }],\n    value: [{ type: Input }],\n    animated: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    gaugeCreated: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GaugeComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mwl-gauge',\n                template: ''\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: GaugeDefaults }]; }, { gaugeCreated: [{\n            type: Output\n        }], dialStartAngle: [{\n            type: Input\n        }], dialEndAngle: [{\n            type: Input\n        }], dialRadius: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], showValue: [{\n            type: Input\n        }], gaugeClass: [{\n            type: Input\n        }], dialClass: [{\n            type: Input\n        }], valueDialClass: [{\n            type: Input\n        }], valueClass: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], animated: [{\n            type: Input\n        }], animationDuration: [{\n            type: Input\n        }] }); })();\n\nconst USER_DEFAULTS = new InjectionToken('gauge defaults');\nfunction defaultsFactory(userDefaults) {\n    const defaults = new GaugeDefaults();\n    Object.assign(defaults, userDefaults);\n    return defaults;\n}\nclass GaugeModule {\n    static forRoot(userDefaults = {}) {\n        return {\n            ngModule: GaugeModule,\n            providers: [\n                {\n                    provide: USER_DEFAULTS,\n                    useValue: userDefaults,\n                },\n                {\n                    provide: GaugeDefaults,\n                    useFactory: defaultsFactory,\n                    deps: [USER_DEFAULTS],\n                },\n            ],\n        };\n    }\n}\nGaugeModule.ɵfac = function GaugeModule_Factory(t) { return new (t || GaugeModule)(); };\nGaugeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: GaugeModule });\nGaugeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GaugeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [GaugeComponent],\n                exports: [GaugeComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GaugeModule, { declarations: [GaugeComponent], exports: [GaugeComponent] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GaugeModule, USER_DEFAULTS, defaultsFactory, GaugeComponent as ɵa, GaugeDefaults as ɵb };\n\n//# sourceMappingURL=angular-gauge.js.map","module.exports = require(\"./src/gauge\");\n","/* global window, define, module */\n(function(global, factory) {\n  var Gauge = factory(global);\n  if(typeof define === \"function\" && define.amd) {\n    // AMD support\n    define(function() {return Gauge;});\n  }else if(typeof module === \"object\" && module.exports) {\n    // CommonJS support\n    module.exports = Gauge;\n  }else {\n    // We are probably running in the browser\n    global.Gauge = Gauge;\n  }\n})(typeof window === \"undefined\" ? this : window, function(global, undefined) {\n\n  var document = global.document,\n    slice = Array.prototype.slice,\n    requestAnimationFrame = (global.requestAnimationFrame ||\n        global.mozRequestAnimationFrame ||\n        global.webkitRequestAnimationFrame ||\n        global.msRequestAnimationFrame ||\n        function(cb) {\n          return setTimeout(cb, 1000 / 60);\n        });\n\n  // EXPERIMENTAL!!\n  /**\n   * Simplistic animation function for animating the gauge. That's all!\n   * Options are:\n   * {\n   *  duration: 1,    // In seconds\n   *  start: 0,       // The start value\n   *  end: 100,       // The end value\n   *  step: function, // REQUIRED! The step function that will be passed the value and does something\n   *  easing: function // The easing function. Default is easeInOutCubic\n   * }\n   */\n  function Animation(options) {\n    var duration = options.duration,\n        currentIteration = 1,\n        iterations = 60 * duration,\n        start = options.start || 0,\n        end = options.end,\n        change = end - start,\n        step = options.step,\n        easing = options.easing || function easeInOutCubic(pos) {\n          // https://github.com/danro/easing-js/blob/master/easing.js\n          if ((pos/=0.5) < 1) return 0.5*Math.pow(pos,3);\n          return 0.5 * (Math.pow((pos-2),3) + 2);\n        };\n\n    function animate() {\n      var progress = currentIteration / iterations, \n          value = change * easing(progress) + start;\n      // console.log(progress + \", \" + value);\n      step(value, currentIteration);\n      currentIteration += 1;\n\n      if(progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    }\n    // start!\n    requestAnimationFrame(animate);\n  }\n\n\n\n  var Gauge = (function() {\n    var SVG_NS = \"http://www.w3.org/2000/svg\";\n\n    var GaugeDefaults = {\n      centerX: 50,\n      centerY: 50\n    };\n\n    var defaultOptions = {\n      dialRadius: 40,\n      dialStartAngle: 135,\n      dialEndAngle: 45,\n      value: 0,\n      max: 100,\n      min: 0,\n      valueDialClass: \"value\",\n      valueClass: \"value-text\",\n      dialClass: \"dial\",\n      gaugeClass: \"gauge\",\n      showValue: true,\n      gaugeColor: null,\n      label: function(val) {return Math.round(val);}\n    };\n\n    function shallowCopy(/* source, ...targets*/) {\n      var target = arguments[0], sources = slice.call(arguments, 1);\n      sources.forEach(function(s) {\n        for(var k in s) {\n          if(s.hasOwnProperty(k)) {\n            target[k] = s[k];\n          }\n        }\n      });\n      return target;\n    }\n\n    /**\n     * A utility function to create SVG dom tree\n     * @param {String} name The SVG element name\n     * @param {Object} attrs The attributes as they appear in DOM e.g. stroke-width and not strokeWidth\n     * @param {Array} children An array of children (can be created by this same function)\n     * @return The SVG element\n     */\n    function svg(name, attrs, children) {\n      var elem = document.createElementNS(SVG_NS, name);\n      for(var attrName in attrs) {\n        elem.setAttribute(attrName, attrs[attrName]);\n      }\n\n      if(children) {\n        children.forEach(function(c) {\n          elem.appendChild(c);\n        });\n      }\n      return elem;\n    }\n\n    /**\n     * Translates percentage value to angle. e.g. If gauge span angle is 180deg, then 50%\n     * will be 90deg\n     */\n    function getAngle(percentage, gaugeSpanAngle) {\n      return percentage * gaugeSpanAngle / 100;\n    }\n\n    function normalize(value, min, limit) {\n      var val = Number(value);\n      if(val > limit) return limit;\n      if(val < min) return min;\n      return val;\n    }\n\n    function getValueInPercentage(value, min, max) {\n      var newMax = max - min, newVal = value - min;\n      return 100 * newVal / newMax;\n      // var absMin = Math.abs(min);\n      // return 100 * (absMin + value) / (max + absMin);\n    }\n\n    /**\n     * Gets cartesian co-ordinates for a specified radius and angle (in degrees)\n     * @param cx {Number} The center x co-oriinate\n     * @param cy {Number} The center y co-ordinate\n     * @param radius {Number} The radius of the circle\n     * @param angle {Number} The angle in degrees\n     * @return An object with x,y co-ordinates\n     */\n    function getCartesian(cx, cy, radius, angle) {\n      var rad = angle * Math.PI / 180;\n      return {\n        x: Math.round((cx + radius * Math.cos(rad)) * 1000) / 1000,\n        y: Math.round((cy + radius * Math.sin(rad)) * 1000) / 1000\n      };\n    }\n\n    // Returns start and end points for dial\n    // i.e. starts at 135deg ends at 45deg with large arc flag\n    // REMEMBER!! angle=0 starts on X axis and then increases clockwise\n    function getDialCoords(radius, startAngle, endAngle) {\n      var cx = GaugeDefaults.centerX,\n          cy = GaugeDefaults.centerY;\n      return {\n        end: getCartesian(cx, cy, radius, endAngle),\n      \tstart: getCartesian(cx, cy, radius, startAngle)\n      };\n    }\n\n    /**\n     * Creates a Gauge object. This should be called without the 'new' operator. Various options\n     * can be passed for the gauge:\n     * {\n     *    dialStartAngle: The angle to start the dial. MUST be greater than dialEndAngle. Default 135deg\n     *    dialEndAngle: The angle to end the dial. Default 45deg\n     *    radius: The gauge's radius. Default 400\n     *    max: The maximum value of the gauge. Default 100\n     *    value: The starting value of the gauge. Default 0\n     *    label: The function on how to render the center label (Should return a value)\n     * }\n     * @param {Element} elem The DOM into which to render the gauge\n     * @param {Object} opts The gauge options\n     * @return a Gauge object\n     */\n    return function Gauge(elem, opts) {\n      opts = shallowCopy({}, defaultOptions, opts);\n      var gaugeContainer = elem,\n          limit = opts.max,\n          min = opts.min,\n          value = normalize(opts.value, min, limit),\n          radius = opts.dialRadius,\n          displayValue = opts.showValue,\n          startAngle = opts.dialStartAngle,\n          endAngle = opts.dialEndAngle,\n          valueDialClass = opts.valueDialClass,\n          valueTextClass = opts.valueClass,\n          valueLabelClass = opts.valueLabelClass,\n          dialClass = opts.dialClass,\n          gaugeClass = opts.gaugeClass,\n          gaugeColor = opts.color,\n          gaugeValueElem,\n          gaugeValuePath,\n          label = opts.label,\n          viewBox = opts.viewBox,\n          instance;\n\n      if(startAngle < endAngle) {\n        console.log(\"WARN! startAngle < endAngle, Swapping\");\n        var tmp = startAngle;\n        startAngle = endAngle;\n        endAngle = tmp;\n      }\n\n      function pathString(radius, startAngle, endAngle, largeArc) {\n        var coords = getDialCoords(radius, startAngle, endAngle),\n            start = coords.start,\n            end = coords.end,\n            largeArcFlag = typeof(largeArc) === \"undefined\" ? 1 : largeArc;\n\n        return [\n          \"M\", start.x, start.y, \n          \"A\", radius, radius, 0, largeArcFlag, 1, end.x, end.y\n        ].join(\" \");\n      }\n\n      function initializeGauge(elem) {\n        gaugeValueElem = svg(\"text\", {\n          x: 50,\n          y: 50,\n          fill: \"#999\",\n          \"class\": valueTextClass,\n          \"font-size\": \"100%\",\n          \"font-family\": \"sans-serif\",\n          \"font-weight\": \"normal\",\n          \"text-anchor\": \"middle\",\n          \"alignment-baseline\": \"middle\",\n          \"dominant-baseline\": \"central\"\n        });\n\n        gaugeValuePath = svg(\"path\", {\n          \"class\": valueDialClass,\n          fill: \"none\",\n          stroke: \"#666\",\n          \"stroke-width\": 2.5,\n          d: pathString(radius, startAngle, startAngle) // value of 0\n        });\n\n        var angle = getAngle(100, 360 - Math.abs(startAngle - endAngle));\n        var flag = angle <= 180 ? 0 : 1;\n        var gaugeElement = svg(\"svg\", {\"viewBox\": viewBox || \"0 0 100 100\", \"class\": gaugeClass},\n          [\n            svg(\"path\", {\n              \"class\": dialClass,\n              fill: \"none\",\n              stroke: \"#eee\",\n              \"stroke-width\": 2,\n              d: pathString(radius, startAngle, endAngle, flag)\n            }),\n            gaugeValueElem,\n            gaugeValuePath\n          ]\n        );\n        elem.appendChild(gaugeElement);\n      }\n\n      function updateGauge(theValue, frame) {\n        var val = getValueInPercentage(theValue, min, limit),\n            // angle = getAngle(val, 360 - Math.abs(endAngle - startAngle)),\n            angle = getAngle(val, 360 - Math.abs(startAngle - endAngle)),\n            // this is because we are using arc greater than 180deg\n            flag = angle <= 180 ? 0 : 1;\n        if(displayValue) {\n          gaugeValueElem.textContent = label.call(opts, theValue);\n        }\n        gaugeValuePath.setAttribute(\"d\", pathString(radius, startAngle, angle + startAngle, flag));\n      }\n\n      function setGaugeColor(value, duration) {        \n        var c = gaugeColor(value), \n            dur = duration * 1000,\n            pathTransition = \"stroke \" + dur + \"ms ease\";\n            // textTransition = \"fill \" + dur + \"ms ease\";\n\n        gaugeValuePath.style = [\n          \"stroke: \" + c,\n          \"-webkit-transition: \" + pathTransition,\n          \"-moz-transition: \" + pathTransition,\n          \"transition: \" + pathTransition,\n        ].join(\";\");\n        /*\n        gaugeValueElem.style = [\n          \"fill: \" + c,\n          \"-webkit-transition: \" + textTransition,\n          \"-moz-transition: \" + textTransition,\n          \"transition: \" + textTransition,\n        ].join(\";\");\n        */\n      }\n\n      instance = {\n        setMaxValue: function(max) {\n          limit = max;\n        },\n        setValue: function(val) {\n          value = normalize(val, min, limit);\n          if(gaugeColor) {\n            setGaugeColor(value, 0)\n          }\n          updateGauge(value);\n        },\n        setValueAnimated: function(val, duration) {\n        \tvar oldVal = value;\n          value = normalize(val, min, limit);\n          if(oldVal === value) {\n            return;\n          }\n\n          if(gaugeColor) {\n            setGaugeColor(value, duration);\n          }\n          Animation({\n            start: oldVal || 0,\n            end: value,\n            duration: duration || 1,\n            step: function(val, frame) {\n              updateGauge(val, frame);\n            }\n          });\n        },\n        getValue: function() {\n          return value;\n        }\n      };\n\n      initializeGauge(gaugeContainer);\n      instance.setValue(value);\n      return instance;\n    };\n  })();\n\n  return Gauge;\n});\n"]}