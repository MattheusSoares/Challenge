{"version":3,"sources":["webpack:///src/app/views/advance-table/advance-table-routing.module.ts","webpack:///src/app/views/advance-table/advance-table.component.html","webpack:///src/app/views/advance-table/advance-table.component.ts","webpack:///src/app/views/advance-table/advance-table.model.ts","webpack:///src/app/views/advance-table/advance-table.service.ts","webpack:///src/app/views/advance-table/dialogs/delete/delete.component.ts","webpack:///src/app/views/advance-table/dialogs/delete/delete.component.html","webpack:///src/app/views/advance-table/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/views/advance-table/dialogs/form-dialog/form-dialog.component.ts"],"names":["routes","path","component","AdvanceTableComponent","AdvanceTableRoutingModule","RouterModule","$event","stopPropagation","selection","httpClient","dialog","advanceTableService","snackBar","displayedColumns","SelectionModel","contextMenuPosition","x","y","loadData","tempDirection","localStorage","getItem","dialogRef","open","FormDialogComponent","data","advanceTable","action","direction","subs","sink","afterClosed","subscribe","result","exampleDatabase","dataChange","value","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","DeleteDialogComponent","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","AdvanceTableService","ExampleDataSource","sort","fromEvent","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","UnsubscribeOnDestroyAdapter","MatPaginator","MatSort","MatMenuTrigger","provide","MAT_DATE_LOCALE","useValue","removeSelectedRows","addNew","refresh","_sort","filterChange","BehaviorSubject","filteredData","pageIndex","next","displayDataChanges","sortChange","page","getAllAdvanceTables","merge","pipe","map","slice","searchStr","fName","lName","email","mobile","gender","bDate","address","country","toLowerCase","indexOf","sortedData","sortData","startIndex","active","a","b","propertyA","propertyB","valueA","isNaN","valueB","DataSource","AdvanceTable","getRandomID","img","avatar","formatDate","Date","S4","Math","random","toString","substring","API_URL","isTblLoading","dialogData","get","error","console","log","name","message","close","deleteAdvanceTable","MAT_DIALOG_DATA","confirmDelete","onNoClick","fb","formControl","FormControl","Validators","dialogTitle","advanceTableForm","createContactForm","hasError","group","addAdvanceTable","getRawValue","confirmAdd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,sDAAAC;AAFb,OADqB,CAAvB;;UAWaC,0B;;;;;yBAAAA,0B;AAAyB,O;;;cAAzBA;;;kBAHF,CAAC,6CAAAC,YAAA,UAAsBL,MAAtB,CAAD,C,EACC,6CAAAK,Y;;;;4HAECD,0B,EAAyB;AAAA;AAAA,oBAF1B,6CAAAC,YAE0B;AAAA,S;AAFd,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC2FN;;AACE;;AAAc;AAAA;;AAAA;;AAAA,qDAAoC,IAApC;AAAwC,WAAxC;;AAGd;;AACF;;;;;;AALmC;;AAE/B;;AAAA,qIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,SAAnD,EAAmD,cAAnD;;;;;;;;AAIJ;;AACE;;AAAc;AAAA,mBAASC,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,4BAAoB,QAAAC,SAAA,gBAApB,GAA4C,IAA5C;AAAgD,WAAlF;;AAEd;;AACF;;;;;;;;AAJgC;;AAE5B;;AAAA,oHAAqC,SAArC,EAAqC,cAArC;;;;;;AAMJ;;AAAmD;;AAAE;;;;;;AACrD;;AAAgC;;AAAU;;;;;;AAAV;;AAAA;;;;;;AAGhC;;AAAsF;;AACtF;;;;AADmD;;;;;;AAEnD;;AAAgF;;AAEhF;;;;;;AADI;;AAAA;;;;;;AAIJ;;AAAqF;;AACrF;;;;AADmD;;;;;;;;AAEnD;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE9B;;AAAa;;;;;;AADb;;AACA;;AAAA;;;;;;AAGF;;AAAqF;;AACrF;;;;AADmD;;;;;;;;AAEnD;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE9B;;AAAa;;;;;;AADb;;AACA;;AAAA;;;;;;AAGF;;AAAmD;;AAAK;;;;;;;;AACxD;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAGF;;AAAqF;;AACrF;;;;AADmD;;;;;;;;AAEnD;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE9B;;AAAc;;;;;;AADd;;AACA;;AAAA;;;;;;AAGF;;AAAmD;;AAAU;;;;;;;;AAC7D;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;;;AACF;;;;;;AADE;;AAAA;;;;;;AAIF;;AAAmD;;AAAM;;;;;;;;AACzD;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAGF;;AAAsF;;AACtF;;;;AADmD;;;;;;;;AAEnD;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE9B;;AAAe;;;;;;AADf;;AACA;;AAAA;;;;;;AAGF;;AAAmD;;AAAO;;;;;;;;AAC1D;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAIF;;AAAgD;;AAAO;;;;;;;;AACvD;;AACE;;AAA4D;AAAA,mBAASF,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC,EAAkC,OAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAlC;;AAE1D;;AAA8C;;AAAI;;AACpD;;AACA;;AAA8D;AAAA,mBAASD,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC,EAAkC,OAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAlC;;AAE5D;;AAAgD;;AAAM;;AACxD;;AACF;;;;;;AAEF;;;;;;;;AACA;;AAA0D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE1D;;;;AADE;;;;;;AAIJ;;AACE;;AAEF;;;;AAFwC;;AAAA;;;;;;;;AASpC;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AACpB;;AAAU;;AAAO;;AACjB;;AAAM;;AAAU;;AAClB;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpB;;AAAU;;AAAM;;AAChB;;AAAM;;AAAW;;AACnB;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpB;;AAAU;;AAAM;;AAChB;;AAAM;;AAAa;;AACrB;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AACpB;;AAAU;;AAAO;;AACjB;;AAAM;;AAAc;;AACtB;;AACA;;AACE;;AAAU;;AAAa;;AACvB;;AAAM;;AAAO;;AACf;;AACA;;AACE;;AAAU;;AAAQ;;AAClB;;AAAO;;AAAW;;AACpB;;;;;;;;AAHsB;;AAAA;;;;;;AAsB1B;;AAEE;;AACF;;;;;;AAFE;;;;;;;;UClOHJ,sB;;;;;AAuBX,wCACSM,UADT,EAESC,MAFT,EAGSC,mBAHT,EAIUC,QAJV,EAI+B;AAAA;;AAAA;;AAE7B;AALO,gBAAAH,UAAA,GAAAA,UAAA;AACA,gBAAAC,MAAA,GAAAA,MAAA;AACA,gBAAAC,mBAAA,GAAAA,mBAAA;AACC,gBAAAC,QAAA,GAAAA,QAAA;AAvBV,gBAAAC,gBAAA,GAAmB,CACjB,QADiB,EAEjB,KAFiB,EAGjB,OAHiB,EAIjB,OAJiB,EAKjB,OALiB,EAMjB,QANiB,EAOjB,OAPiB,EAQjB,QARiB,EASjB,SATiB,EAUjB,SAViB,EAWjB,SAXiB,CAAnB;AAeA,gBAAAL,SAAA,GAAY,IAAI,sDAAAM,cAAJ,CAAiC,IAAjC,EAAuC,EAAvC,CAAZ;AAiBA,gBAAAC,mBAAA,GAAsB;AAAEC,aAAC,EAAE,KAAL;AAAYC,aAAC,EAAE;AAAf,WAAtB;AAT+B;AAG9B;;;;iBAOD,oBAAW;AACT,iBAAKC,QAAL;AACD;;;iBACD,mBAAU;AACR,iBAAKA,QAAL;AACD;;;iBACD,kBAAS;AAAA;;AACP,gBAAIC,aAAJ;;AACA,gBAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,MAAtC,EAA8C;AAC5CF,2BAAa,GAAG,KAAhB;AACD,aAFD,MAEO;AACLA,2BAAa,GAAG,KAAhB;AACD;;AACD,gBAAMG,SAAS,GAAG,KAAKZ,MAAL,CAAYa,IAAZ,CAAiB,wEAAAC,mBAAjB,EAAsC;AACtDC,kBAAI,EAAE;AACJC,4BAAY,EAAE,KAAKA,YADf;AAEJC,sBAAM,EAAE;AAFJ,eADgD;AAKtDC,uBAAS,EAAET;AAL2C,aAAtC,CAAlB;AAOA,iBAAKU,IAAL,CAAUC,IAAV,GAAiBR,SAAS,CAACS,WAAV,GAAwBC,SAAxB,CAAkC,UAACC,MAAD,EAAY;AAC7D,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB;AACA;AACA,sBAAI,CAACC,eAAL,CAAqBC,UAArB,CAAgCC,KAAhC,CAAsCC,OAAtC,CACE,MAAI,CAAC1B,mBAAL,CAAyB2B,aAAzB,EADF;;AAGA,sBAAI,CAACC,YAAL;;AACA,sBAAI,CAACC,gBAAL,CACE,kBADF,EAEE,+BAFF,EAGE,QAHF,EAIE,QAJF;AAMD;AACF,aAfgB,CAAjB;AAgBD;;;iBACD,kBAASC,GAAT,EAAc;AAAA;;AACZ,iBAAKC,EAAL,GAAUD,GAAG,CAACC,EAAd;AACA,gBAAIvB,aAAJ;;AACA,gBAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,MAAtC,EAA8C;AAC5CF,2BAAa,GAAG,KAAhB;AACD,aAFD,MAEO;AACLA,2BAAa,GAAG,KAAhB;AACD;;AACD,gBAAMG,SAAS,GAAG,KAAKZ,MAAL,CAAYa,IAAZ,CAAiB,wEAAAC,mBAAjB,EAAsC;AACtDC,kBAAI,EAAE;AACJC,4BAAY,EAAEe,GADV;AAEJd,sBAAM,EAAE;AAFJ,eADgD;AAKtDC,uBAAS,EAAET;AAL2C,aAAtC,CAAlB;AAOA,iBAAKU,IAAL,CAAUC,IAAV,GAAiBR,SAAS,CAACS,WAAV,GAAwBC,SAAxB,CAAkC,UAACC,MAAD,EAAY;AAC7D,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB;AACA,oBAAMU,UAAU,GAAG,MAAI,CAACT,eAAL,CAAqBC,UAArB,CAAgCC,KAAhC,CAAsCQ,SAAtC,CACjB,UAAC5B,CAAD;AAAA,yBAAOA,CAAC,CAAC0B,EAAF,KAAS,MAAI,CAACA,EAArB;AAAA,iBADiB,CAAnB,CAFgB,CAKhB;;;AACA,sBAAI,CAACR,eAAL,CAAqBC,UAArB,CAAgCC,KAAhC,CAAsCO,UAAtC,IACE,MAAI,CAAChC,mBAAL,CAAyB2B,aAAzB,EADF,CANgB,CAQhB;;AACA,sBAAI,CAACC,YAAL;;AACA,sBAAI,CAACC,gBAAL,CACE,OADF,EAEE,gCAFF,EAGE,QAHF,EAIE,QAJF;AAMD;AACF,aAlBgB,CAAjB;AAmBD;;;iBACD,oBAAWC,GAAX,EAAgB;AAAA;;AACd,iBAAKC,EAAL,GAAUD,GAAG,CAACC,EAAd;AACA,gBAAIvB,aAAJ;;AACA,gBAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,MAAtC,EAA8C;AAC5CF,2BAAa,GAAG,KAAhB;AACD,aAFD,MAEO;AACLA,2BAAa,GAAG,KAAhB;AACD;;AACD,gBAAMG,SAAS,GAAG,KAAKZ,MAAL,CAAYa,IAAZ,CAAiB,8DAAAsB,qBAAjB,EAAwC;AACxDpB,kBAAI,EAAEgB,GADkD;AAExDb,uBAAS,EAAET;AAF6C,aAAxC,CAAlB;AAIA,iBAAKU,IAAL,CAAUC,IAAV,GAAiBR,SAAS,CAACS,WAAV,GAAwBC,SAAxB,CAAkC,UAACC,MAAD,EAAY;AAC7D,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,oBAAMU,UAAU,GAAG,MAAI,CAACT,eAAL,CAAqBC,UAArB,CAAgCC,KAAhC,CAAsCQ,SAAtC,CACjB,UAAC5B,CAAD;AAAA,yBAAOA,CAAC,CAAC0B,EAAF,KAAS,MAAI,CAACA,EAArB;AAAA,iBADiB,CAAnB,CADgB,CAIhB;;;AACA,sBAAI,CAACR,eAAL,CAAqBC,UAArB,CAAgCC,KAAhC,CAAsCU,MAAtC,CAA6CH,UAA7C,EAAyD,CAAzD;;AACA,sBAAI,CAACJ,YAAL;;AACA,sBAAI,CAACC,gBAAL,CACE,iBADF,EAEE,kCAFF,EAGE,QAHF,EAIE,QAJF;AAMD;AACF,aAfgB,CAAjB;AAgBD;;;iBACO,wBAAe;AACrB,iBAAKO,SAAL,CAAeC,eAAf,CAA+B,KAAKD,SAAL,CAAeE,QAA9C;AACD;AACD;;;;iBACA,yBAAgB;AACd,gBAAMC,WAAW,GAAG,KAAK1C,SAAL,CAAe2C,QAAf,CAAwBC,MAA5C;AACA,gBAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgBC,YAAhB,CAA6BH,MAA7C;AACA,mBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;;;iBACA,wBAAe;AAAA;;AACb,iBAAKG,aAAL,KACI,KAAKhD,SAAL,CAAeiD,KAAf,EADJ,GAEI,KAAKH,UAAL,CAAgBC,YAAhB,CAA6BG,OAA7B,CAAqC,UAACjB,GAAD;AAAA,qBACnC,MAAI,CAACjC,SAAL,CAAemD,MAAf,CAAsBlB,GAAtB,CADmC;AAAA,aAArC,CAFJ;AAKD;;;iBACD,8BAAqB;AAAA;;AACnB,gBAAMmB,WAAW,GAAG,KAAKpD,SAAL,CAAe2C,QAAf,CAAwBC,MAA5C;AACA,iBAAK5C,SAAL,CAAe2C,QAAf,CAAwBO,OAAxB,CAAgC,UAACG,IAAD,EAAU;AACxC,kBAAMC,KAAK,GAAW,MAAI,CAACR,UAAL,CAAgBC,YAAhB,CAA6BX,SAA7B,CACpB,UAACmB,CAAD;AAAA,uBAAOA,CAAC,KAAKF,IAAb;AAAA,eADoB,CAAtB,CADwC,CAIxC;;;AACA,oBAAI,CAAC3B,eAAL,CAAqBC,UAArB,CAAgCC,KAAhC,CAAsCU,MAAtC,CAA6CgB,KAA7C,EAAoD,CAApD;;AACA,oBAAI,CAACvB,YAAL;;AACA,oBAAI,CAAC/B,SAAL,GAAiB,IAAI,sDAAAM,cAAJ,CAAiC,IAAjC,EAAuC,EAAvC,CAAjB;AACD,aARD;AASA,iBAAK0B,gBAAL,CACE,iBADF,EAEEoB,WAAW,GAAG,mCAFhB,EAGE,QAHF,EAIE,QAJF;AAMD;;;iBACM,oBAAW;AAAA;;AAChB,iBAAK1B,eAAL,GAAuB,IAAI,oDAAA8B,mBAAJ,CAAwB,KAAKvD,UAA7B,CAAvB;AACA,iBAAK6C,UAAL,GAAkB,IAAIW,kBAAJ,CAChB,KAAK/B,eADW,EAEhB,KAAKa,SAFW,EAGhB,KAAKmB,IAHW,CAAlB;AAKA,iBAAKrC,IAAL,CAAUC,IAAV,GAAiB,sCAAAqC,SAAA,EAAU,KAAKC,MAAL,CAAYC,aAAtB,EAAqC,OAArC,EAA8CrC,SAA9C,CACf,YAAM;AACJ,kBAAI,CAAC,MAAI,CAACsB,UAAV,EAAsB;AACpB;AACD;;AACD,oBAAI,CAACA,UAAL,CAAgBc,MAAhB,GAAyB,MAAI,CAACA,MAAL,CAAYC,aAAZ,CAA0BjC,KAAnD;AACD,aANc,CAAjB;AAQD;;;iBACD,0BAAiBkC,SAAjB,EAA4BC,IAA5B,EAAkCC,aAAlC,EAAiDC,cAAjD,EAAiE;AAC/D,iBAAK7D,QAAL,CAAcW,IAAd,CAAmBgD,IAAnB,EAAyB,EAAzB,EAA6B;AAC3BG,sBAAQ,EAAE,IADiB;AAE3BC,8BAAgB,EAAEH,aAFS;AAG3BI,gCAAkB,EAAEH,cAHO;AAI3BI,wBAAU,EAAEP;AAJe,aAA7B;AAMD,W,CAED;;;;iBACA,uBAAcQ,KAAd,EAAiCjB,IAAjC,EAAqD;AACnDiB,iBAAK,CAACC,cAAN;AACA,iBAAKhE,mBAAL,CAAyBC,CAAzB,GAA6B8D,KAAK,CAACE,OAAN,GAAgB,IAA7C;AACA,iBAAKjE,mBAAL,CAAyBE,CAAzB,GAA6B6D,KAAK,CAACG,OAAN,GAAgB,IAA7C;AACA,iBAAKC,WAAL,CAAiBC,QAAjB,GAA4B;AAAEtB,kBAAI,EAAEA;AAAR,aAA5B;AACA,iBAAKqB,WAAL,CAAiBE,IAAjB,CAAsBC,cAAtB,CAAqC,OAArC;AACA,iBAAKH,WAAL,CAAiBI,QAAjB;AACD;;;;QA9MO,iEAAAC,2B;;;yBADGpF,sB,EAAqB,6H,EAAA,gI,EAAA,wI,EAAA,qI;AAAA,O;;;cAArBA,sB;AAAqB,0C;AAAA;AAAA;sEA+BrB,0DAAAqF,Y,EAAc,C;;sEACd,qDAAAC,O,EAAS,C;;;;sEAET,qDAAAC,c,EAAc,C;;;;;;;;;;;;oFApCd,CAAC;AAAEC,iBAAO,EAAE,qDAAAC,eAAX;AAA4BC,kBAAQ,EAAE;AAAtC,SAAD,C,GAAiD,wE;AAAA,kB;AAAA,gB;AAAA,4wG;AAAA;AAAA;ADtB9D;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAK;;AAC9B;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AACE;;AAAoC;;AAAK;;AAC3C;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAyC;;AAAQ;;AAAsB;;AAAS;;AACnE;;AAAI;;AACjB;;AACE;;AAAoB;;AAAoB;;AAAyC;;AAAO;;AAExF;;AACA;;AAAoB;;AAAoB;;AAAyC;;AAAO;;AAExF;;AACA;;AAAoB;;AAAoB;;AAAyC;;AAAO;;AAExF;;AACA;;AAAoB;;AAAoB;;AAAyC;;AAAO;;AAExF;;AACA;;AAAoB;;AAAoB;;AAAyC;;AAAO;;AAExF;;AACA;;AAAoB;;AAAoB;;AAAyC;;AAAO;;AACnE;;AACrB;;AAAoB;;AAAoB;;AAAyC;;AAAO;;AACvE;;AACjB;;AAAoB;;AAAoB;;AAAyC;;AAAO;;AAClE;;AACtB;;AAAoB;;AAAoB;;AAAyC;;AAAO;;AAClF;;AACN;;AAAoB;;AAAoB;;AAAyC;;AAAO;;AAC7E;;AACX;;AAAoB;;AAAoB;;AAAyC;;AAAO;;AAC/E;;AACX;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAQ;;AAAY;;AAAS;;AACjC;;AACA;;AACE;;AAA0B;;AAAsC;;AAAM;;AAAI;;AAC1E;;AAEF;;AACA;;AACE;;AACE;;AAAkC;AAAA,qBAAS,IAAAC,kBAAA,EAAT;AAA6B,aAA7B;;AAChC;;AAA4B;;AAAM;;AACpC;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAqC;AAAA,qBAAS,IAAAC,MAAA,EAAT;AAAiB,aAAjB;;AACnC;;AAA4B;;AAAG;;AACjC;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAqC;AAAA,qBAAS,IAAAC,OAAA,EAAT;AAAkB,aAAlB;;AACnC;;AAA4B;;AAAO;;AACrC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAEE;;AACE;;AAMA;;AAKF;;AAEA;;AACE;;AACA;;AACF;;AACA;;AACE;;AAEA;;AAGF;;AACA;;AACE;;AAEA;;AAGF;;AACA;;AACE;;AAEA;;AAGF;;AACA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AAEA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AAEA;;AAGF;;AACA;;AACE;;AACA;;AAEF;;AAEA;;AACE;;AACA;;AAUF;;AACA;;AACA;;AAGF;;AAEA;;AAKA;;AAGA;;AACE;;AA0BF;;AACA;;AACE;;AACE;;AAAU;;AAAY;;AACtB;;AAAM;;AAAM;;AACd;;AACA;;AACE;;AAAU;;AAAI;;AACd;;AAAM;;AAAM;;AACd;;AACA;;AACE;;AAAU;;AAAI;;AACd;;AAAM;;AAAM;;AACd;;AACF;;AAGA;;AAIA;;AAGF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA7L6D;;AAAA;;AA4B7B;;AAAA;;AA0FC;;AAAA;;AACa;;AAAA;;AAK1B;;AAAA;;AAK2C;;AAAA,yGAAoC,KAApC,EAAoC,yBAApC;;AACX;;AA8ChC;;AAAA;;AAIoB;;AAAA,mHAAyC,WAAzC,EAAyC,CAAzC,EAAyC,UAAzC,EAAyC,EAAzC,EAAyC,iBAAzC,EAAyC,sEAAzC;;;;;;;;UCpB3B/B,kB;;;;;AAUX,oCACS/B,eADT,EAESa,SAFT,EAGSkD,KAHT,EAGuB;AAAA;;AAAA;;AAErB;AAJO,iBAAA/D,eAAA,GAAAA,eAAA;AACA,iBAAAa,SAAA,GAAAA,SAAA;AACA,iBAAAkD,KAAA,GAAAA,KAAA;AAZT,iBAAAC,YAAA,GAAe,IAAI,mCAAAC,eAAJ,CAAoB,EAApB,CAAf;AAOA,iBAAAC,YAAA,GAA+B,EAA/B;AACA,iBAAA7C,YAAA,GAA+B,EAA/B,CAIuB,CAGrB;;AACA,iBAAK2C,YAAL,CAAkBlE,SAAlB,CAA4B;AAAA,mBAAO,OAAKe,SAAL,CAAesD,SAAf,GAA2B,CAAlC;AAAA,WAA5B;;AAJqB;AAKtB;;;;eAhBD,eAAU;AACR,mBAAO,KAAKH,YAAL,CAAkB9D,KAAzB;AACD,W;eACD,aAAWgC,MAAX,EAA2B;AACzB,iBAAK8B,YAAL,CAAkBI,IAAlB,CAAuBlC,MAAvB;AACD;AAYD;;;;iBACA,mBAAO;AAAA;;AACL;AACA,gBAAMmC,kBAAkB,GAAG,CACzB,KAAKrE,eAAL,CAAqBC,UADI,EAEzB,KAAK8D,KAAL,CAAWO,UAFc,EAGzB,KAAKN,YAHoB,EAIzB,KAAKnD,SAAL,CAAe0D,IAJU,CAA3B;AAMA,iBAAKvE,eAAL,CAAqBwE,mBAArB;AACA,mBAAO,uCAAAC,KAAA,gBAASJ,kBAAT,EAA6BK,IAA7B,CACL,iDAAAC,GAAA,EAAI,YAAM;AACR;AACA,oBAAI,CAACT,YAAL,GAAoB,MAAI,CAAClE,eAAL,CAAqBT,IAArB,CACjBqF,KADiB,GAEjB1C,MAFiB,CAEV,UAAC1C,YAAD,EAAgC;AACtC,oBAAMqF,SAAS,GAAG,CAChBrF,YAAY,CAACsF,KAAb,GACAtF,YAAY,CAACuF,KADb,GAEAvF,YAAY,CAACwF,KAFb,GAGAxF,YAAY,CAACyF,MAHb,GAIAzF,YAAY,CAAC0F,MAJb,GAKA1F,YAAY,CAAC2F,KALb,GAMA3F,YAAY,CAAC4F,OANb,GAOA5F,YAAY,CAAC6F,OARG,EAShBC,WATgB,EAAlB;AAUA,uBAAOT,SAAS,CAACU,OAAV,CAAkB,MAAI,CAACrD,MAAL,CAAYoD,WAAZ,EAAlB,MAAiD,CAAC,CAAzD;AACD,eAdiB,CAApB,CAFQ,CAiBR;;AACA,kBAAME,UAAU,GAAG,MAAI,CAACC,QAAL,CAAc,MAAI,CAACvB,YAAL,CAAkBU,KAAlB,EAAd,CAAnB,CAlBQ,CAmBR;;;AACA,kBAAMc,UAAU,GAAG,MAAI,CAAC7E,SAAL,CAAesD,SAAf,GAA2B,MAAI,CAACtD,SAAL,CAAeE,QAA7D;AACA,oBAAI,CAACM,YAAL,GAAoBmE,UAAU,CAAC5E,MAAX,CAClB8E,UADkB,EAElB,MAAI,CAAC7E,SAAL,CAAeE,QAFG,CAApB;AAIA,qBAAO,MAAI,CAACM,YAAZ;AACD,aA1BD,CADK,CAAP;AA6BD;;;iBACD,sBAAa,CAAE;AACf;;;;iBACA,kBAAS9B,IAAT,EAA6B;AAAA;;AAC3B,gBAAI,CAAC,KAAKwE,KAAL,CAAW4B,MAAZ,IAAsB,KAAK5B,KAAL,CAAWrE,SAAX,KAAyB,EAAnD,EAAuD;AACrD,qBAAOH,IAAP;AACD;;AACD,mBAAOA,IAAI,CAACyC,IAAL,CAAU,UAAC4D,CAAD,EAAIC,CAAJ,EAAU;AACzB,kBAAIC,SAAS,GAAoB,EAAjC;AACA,kBAAIC,SAAS,GAAoB,EAAjC;;AACA,sBAAQ,OAAI,CAAChC,KAAL,CAAW4B,MAAnB;AACE,qBAAK,IAAL;AAAA,6BAC2B,CAACC,CAAC,CAACpF,EAAH,EAAOqF,CAAC,CAACrF,EAAT,CAD3B;AACGsF,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,OAAL;AAAA,8BAC2B,CAACH,CAAC,CAACd,KAAH,EAAUe,CAAC,CAACf,KAAZ,CAD3B;AACGgB,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,OAAL;AAAA,8BAC2B,CAACH,CAAC,CAACb,KAAH,EAAUc,CAAC,CAACd,KAAZ,CAD3B;AACGe,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,OAAL;AAAA,8BAC2B,CAACH,CAAC,CAACZ,KAAH,EAAUa,CAAC,CAACb,KAAZ,CAD3B;AACGc,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,SAAL;AAAA,8BAC2B,CAACH,CAAC,CAACR,OAAH,EAAYS,CAAC,CAACT,OAAd,CAD3B;AACGU,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,QAAL;AAAA,8BAC2B,CAACH,CAAC,CAACX,MAAH,EAAWY,CAAC,CAACZ,MAAb,CAD3B;AACGa,2BADH;AACcC,2BADd;AAEE;AAlBJ;;AAoBA,kBAAMC,MAAM,GAAGC,KAAK,CAAC,CAACH,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AACA,kBAAMI,MAAM,GAAGD,KAAK,CAAC,CAACF,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AACA,qBACE,CAACC,MAAM,GAAGE,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAxB,KAA8B,OAAI,CAACnC,KAAL,CAAWrE,SAAX,KAAyB,KAAzB,GAAiC,CAAjC,GAAqC,CAAC,CAApE,CADF;AAGD,aA5BM,CAAP;AA6BD;;;;QA9FoC,sDAAAyG,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCxO1BC,a;AAWX,+BAAY5G,YAAZ,EAA0B;AAAA;;AACxB;AACE,iBAAKgB,EAAL,GAAUhB,YAAY,CAACgB,EAAb,IAAmB,KAAK6F,WAAL,EAA7B;AACA,iBAAKC,GAAL,GAAW9G,YAAY,CAAC+G,MAAb,IAAuB,8BAAlC;AACA,iBAAKzB,KAAL,GAAatF,YAAY,CAACsF,KAAb,IAAsB,EAAnC;AACA,iBAAKC,KAAL,GAAavF,YAAY,CAACuF,KAAb,IAAsB,EAAnC;AACA,iBAAKC,KAAL,GAAaxF,YAAY,CAACwF,KAAb,IAAsB,EAAnC;AACA,iBAAKE,MAAL,GAAc1F,YAAY,CAAC0F,MAAb,IAAuB,MAArC;AACA,iBAAKC,KAAL,GAAa,iDAAAqB,UAAA,EAAW,IAAIC,IAAJ,EAAX,EAAuB,YAAvB,EAAqC,IAArC,KAA8C,EAA3D;AACA,iBAAKxB,MAAL,GAAczF,YAAY,CAACyF,MAAb,IAAuB,EAArC;AACA,iBAAKG,OAAL,GAAe5F,YAAY,CAAC4F,OAAb,IAAwB,EAAvC;AACA,iBAAKC,OAAL,GAAe7F,YAAY,CAAC6F,OAAb,IAAwB,EAAvC;AACD;AACF;;;;iBACM,uBAAW;AAChB,gBAAMqB,EAAE,GAAG,SAALA,EAAK,GAAM;AACf,qBAAO,CAAE,CAAC,IAAIC,IAAI,CAACC,MAAL,EAAL,IAAsB,OAAvB,GAAkC,CAAnC,EAAsCC,QAAtC,CAA+C,EAA/C,EAAmDC,SAAnD,CAA6D,CAA7D,CAAP;AACD,aAFD;;AAGA,mBAAOJ,EAAE,KAAKA,EAAE,EAAhB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCzBU5E,oB;;;;;AAQX,sCAAoBvD,UAApB,EAA4C;AAAA;;AAAA;;AAC1C;AADkB,kBAAAA,UAAA,GAAAA,UAAA;AAPH,kBAAAwI,OAAA,GAAU,+BAAV;AACjB,kBAAAC,YAAA,GAAe,IAAf;AACA,kBAAA/G,UAAA,GAA8C,IAAI,kCAAAgE,eAAJ,CAE5C,EAF4C,CAA9C;AAK4C;AAE3C;;;;eACD,eAAQ;AACN,mBAAO,KAAKhE,UAAL,CAAgBC,KAAvB;AACD;;;iBACD,yBAAgB;AACd,mBAAO,KAAK+G,UAAZ;AACD;AACD;;;;iBACA,+BAAmB;AAAA;;AACjB,iBAAKtH,IAAL,CAAUC,IAAV,GAAiB,KAAKrB,UAAL,CACd2I,GADc,CACM,KAAKH,OADX,EAEdjH,SAFc,CAGb,UAACP,IAAD,EAAU;AACR,qBAAI,CAACyH,YAAL,GAAoB,KAApB;;AACA,qBAAI,CAAC/G,UAAL,CAAgBmE,IAAhB,CAAqB7E,IAArB;AACD,aANY,EAOb,UAAC4H,KAAD,EAA8B;AAC5B,qBAAI,CAACH,YAAL,GAAoB,KAApB;AACAI,qBAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAN,GAAa,GAAb,GAAmBH,KAAK,CAACI,OAArC;AACD,aAVY,CAAjB;AAYD;;;iBACD,yBAAgB/H,YAAhB,EAA0C;AACxC,iBAAKyH,UAAL,GAAkBzH,YAAlB;AAEA;;;;;;AAMD;;;iBACD,4BAAmBA,YAAnB,EAA6C;AAC3C,iBAAKyH,UAAL,GAAkBzH,YAAlB;AAEA;;;;;;;AAOD;;;iBACD,4BAAmBgB,EAAnB,EAA6B;AAC3B4G,mBAAO,CAACC,GAAR,CAAY7G,EAAZ;AAEA;;;;;;;AAOD;;;;QA/DsC,iEAAA6C,2B;;;yBAA5BvB,oB,EAAmB,oH;AAAA,O;;;eAAnBA,oB;AAAmB,iBAAnBA,oBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEnBnB,sB;AACX,wCACSvB,SADT,EAEkCG,IAFlC,EAGSd,mBAHT,EAGiD;AAAA;;AAFxC,eAAAW,SAAA,GAAAA,SAAA;AACyB,eAAAG,IAAA,GAAAA,IAAA;AACzB,eAAAd,mBAAA,GAAAA,mBAAA;AACL;;;;iBACJ,qBAAS;AACP,iBAAKW,SAAL,CAAeoI,KAAf;AACD;;;iBACD,yBAAa;AACX,iBAAK/I,mBAAL,CAAyBgJ,kBAAzB,CAA4C,KAAKlI,IAAL,CAAUiB,EAAtD;AACD;;;;;;;yBAXUG,sB,EAAqB,mI,EAAA,gEAGtB,sDAAA+G,eAHsB,C,EAGP,wI;AAAA,O;;;cAHd/G,sB;AAAqB,mC;AAAA,iB;AAAA,e;AAAA,0S;AAAA;AAAA;ACRlC;;AACE;;AAAqB;;AAAa;;AAClC;;AACE;;AACE;;AACE;;AAAG;;AAAgC;;AAAM;;AAAO;;AAA6B;;AAC/E;;AACA;;AACE;;AAAG;;AAAgC;;AAAO;;AAAO;;AAAgB;;AACnE;;AACA;;AACE;;AACE;;AAA+B;;AAAQ;;AAAO;;AAChD;;AACF;;AACF;;AACF;;AACA;;AACE;;AAA4D;AAAA,qBAAS,IAAAgH,aAAA,EAAT;AAAwB,aAAxB;;AAC1D;;AACF;;AACA;;AAAwB;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AACpE;;AACF;;;;AAlBwD;;AAAA;;AAGC;;AAAA;;AAID;;AAAA;;AAMf;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACK7B;;AACE;;AACF;;;;;;AAQA;;AACE;;AACF;;;;;;AAWE;;AACE;;AACF;;;;;;AAWF;;AAEE;;AACF;;;;;;AASA;;AACE;;AACF;;;;;;AAUA;;AACE;;AACF;;;;;;AA6BA;;AACE;;AACF;;;;UClGCtI,oB;AAKX,sCACSF,SADT,EAEkCG,IAFlC,EAGSd,mBAHT,EAIUoJ,EAJV,EAIyB;AAAA;;AAHhB,eAAAzI,SAAA,GAAAA,SAAA;AACyB,eAAAG,IAAA,GAAAA,IAAA;AACzB,eAAAd,mBAAA,GAAAA,mBAAA;AACC,eAAAoJ,EAAA,GAAAA,EAAA;AAcV,eAAAC,WAAA,GAAc,IAAI,4CAAAC,WAAJ,CAAgB,EAAhB,EAAoB,CAChC,4CAAAC,UAAA,SADgC,CAEhC;AAFgC,WAApB,CAAd,CAdyB,CAEvB;;AACA,eAAKvI,MAAL,GAAcF,IAAI,CAACE,MAAnB;;AACA,cAAI,KAAKA,MAAL,KAAgB,MAApB,EAA4B;AAC1B,iBAAKwI,WAAL,GACE1I,IAAI,CAACC,YAAL,CAAkBsF,KAAlB,GAA0B,GAA1B,GAAgCvF,IAAI,CAACC,YAAL,CAAkBuF,KADpD;AAEA,iBAAKvF,YAAL,GAAoBD,IAAI,CAACC,YAAzB;AACD,WAJD,MAIO;AACL,iBAAKyI,WAAL,GAAmB,YAAnB;AACA,iBAAKzI,YAAL,GAAoB,IAAI,kDAAA4G,YAAJ,CAAiB,EAAjB,CAApB;AACD;;AACD,eAAK8B,gBAAL,GAAwB,KAAKC,iBAAL,EAAxB;AACD;;;;iBAKD,2BAAkB;AAChB,mBAAO,KAAKL,WAAL,CAAiBM,QAAjB,CAA0B,UAA1B,IACH,gBADG,GAEH,KAAKN,WAAL,CAAiBM,QAAjB,CAA0B,OAA1B,IACA,mBADA,GAEA,EAJJ;AAKD;;;iBACD,6BAAiB;AACf,mBAAO,KAAKP,EAAL,CAAQQ,KAAR,CAAc;AACnB7H,gBAAE,EAAE,CAAC,KAAKhB,YAAL,CAAkBgB,EAAnB,CADe;AAEnB8F,iBAAG,EAAE,CAAC,KAAK9G,YAAL,CAAkB8G,GAAnB,CAFc;AAGnBxB,mBAAK,EAAE,CAAC,KAAKtF,YAAL,CAAkBsF,KAAnB,EAA0B,CAAC,4CAAAkD,UAAA,SAAD,CAA1B,CAHY;AAInBjD,mBAAK,EAAE,CAAC,KAAKvF,YAAL,CAAkBuF,KAAnB,EAA0B,CAAC,4CAAAiD,UAAA,SAAD,CAA1B,CAJY;AAKnBhD,mBAAK,EAAE,CACL,KAAKxF,YAAL,CAAkBwF,KADb,EAEL,CAAC,4CAAAgD,UAAA,SAAD,EAAsB,4CAAAA,UAAA,MAAtB,EAAwC,4CAAAA,UAAA,WAAqB,CAArB,CAAxC,CAFK,CALY;AASnB9C,oBAAM,EAAE,CAAC,KAAK1F,YAAL,CAAkB0F,MAAnB,CATW;AAUnBC,mBAAK,EAAE,CACL,iDAAAqB,UAAA,EAAW,KAAKhH,YAAL,CAAkB2F,KAA7B,EAAoC,YAApC,EAAkD,IAAlD,CADK,EAEL,CAAC,4CAAA6C,UAAA,SAAD,CAFK,CAVY;AAcnB5C,qBAAO,EAAE,CAAC,KAAK5F,YAAL,CAAkB4F,OAAnB,CAdU;AAenBH,oBAAM,EAAE,CAAC,KAAKzF,YAAL,CAAkByF,MAAnB,EAA2B,CAAC,4CAAA+C,UAAA,SAAD,CAA3B,CAfW;AAgBnB3C,qBAAO,EAAE,CAAC,KAAK7F,YAAL,CAAkB6F,OAAnB;AAhBU,aAAd,CAAP;AAkBD;;;iBACD,kBAAS,CACP;AACD;;;iBACD,qBAAS;AACP,iBAAKjG,SAAL,CAAeoI,KAAf;AACD;;;iBACM,sBAAU;AACf,iBAAK/I,mBAAL,CAAyB6J,eAAzB,CACE,KAAKJ,gBAAL,CAAsBK,WAAtB,EADF;AAGD;;;;;;;yBAhEUjJ,oB,EAAmB,mI,EAAA,gEAOpB,sDAAAoI,eAPoB,C,EAOL,wI,EAAA,wH;AAAA,O;;;cAPdpI,oB;AAAmB,wC;AAAA,oFAFnB,CAAC;AAAEmE,iBAAO,EAAE,oDAAAC,eAAX;AAA4BC,kBAAQ,EAAE;AAAtC,SAAD,CAEmB,E;AAF8B,kB;AAAA,gB;AAAA,u1C;AAAA;AAAA;ADhB9D;;AACE;;AACE;;AACE;;AACE;;AACA;;AACE;;AACE;;AAAe;;AACnB;;AACF;;AACF;;AACA;;AAAwB;AAAA,qBAAS,IAAAvE,SAAA,QAAT;AAA0B,aAA1B;;AACtB;;AAAU;;AAAK;;AACjB;;AACF;;AACA;;AACE;;AAA+D;AAAA;AAAA;;AAC7D;;AACE;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACA;;AAAoB;;AAAI;;AACxB;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACA;;AAAoB;;AAAI;;AACxB;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAyB;;AAAO;;AAChC;;AACE;;AAA+B;;AAAI;;AACnC;;AAAiC;;AAAM;;AACvC;;AAGF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAAoB;;AAAK;;AACzB;;AAIF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACA;;AAAoB;;AAAK;;AACzB;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACyB;AAAA,qBAAS,IAAAoJ,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAI;;AACpD;;AAAuC;AAAA,qBAAS,IAAAZ,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AACnF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAvIa;;AAAA;;AAGD;;AAAA;;AASwB;;AAAA;;AAOZ;;AAAA;;AAUA;;AAAA;;AAaE;;AAAA;;AAcX;;AAAA;;AAQa;;AAAA;;AACiB;;AAAA;;AAErB;;AAAA;;AAYA;;AAAA;;AASE;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AAiB8B;;AAAA,yFAAe,UAAf,EAAe,2BAAf,EAAe,kBAAf,EAAe,CAAf","file":"default-src_app_views_advance-table_advance-table-routing_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdvanceTableComponent } from './advance-table.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdvanceTableComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdvanceTableRoutingModule {}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Table</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Table</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"alert alert-primary\">\r\n      Advance table component is develop using <strong>Angular Material Table</strong>. Main\r\n      features are:<br><br>\r\n      <ul class=\"fa-ul\">\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Searching\r\n          Records In Table\r\n        </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Sorting Records\r\n          In Table\r\n        </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Add, Update,\r\n          Delete In Table Record\r\n        </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Row Click Edit\r\n          Table Record\r\n        </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Context Menu,\r\n          And Nested Context Menu\r\n        </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Crud Operations\r\n          Using Context Menu </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Multi select row\r\n          using checkbox </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Multiple delete\r\n          rows using checkbox </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Refresh Table\r\n          Data</li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Pagination\r\n          Supported</li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Row Per Page\r\n          Options</li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Table Header</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"img\">\r\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\"> Image\r\n                  </mat-header-cell>\r\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-6\"> <img\r\n                      [src]=\"row.img\" />\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"fName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-8'\">First Name\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-8'\">\r\n                    {{row.fName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-8'\">Last Name\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-8'\">\r\n                    {{row.lName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"gender\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-7'\">Gender\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-7'\">\r\n                    {{row.gender}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"bDate\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Birth Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.bDate | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mobile\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.mobile}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"address\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-20'\">Address\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-20'\">\r\n                    {{row.address}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"country\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Country</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.country}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <!-- context menu start -->\r\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n              </div>\r\n              <mat-menu #contextMenu=\"matMenu\">\r\n                <ng-template matMenuContent let-item=\"item\">\r\n                  <button mat-menu-item (click)=\"addNew()\">\r\n                    <mat-icon>add_box</mat-icon>\r\n                    <span>Add Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"editCall(item)\">\r\n                    <mat-icon>create</mat-icon>\r\n                    <span>Edit Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                    <span>Delete Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"refresh()\">\r\n                    <mat-icon>refresh</mat-icon>\r\n                    <span>Refresh Record</span>\r\n                  </button>\r\n                  <button mat-menu-item disabled>\r\n                    <mat-icon>no_encryption</mat-icon>\r\n                    <span>Disable</span>\r\n                  </button>\r\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                    <mat-icon>list_alt</mat-icon>\r\n                    <span> Nested Menu</span>\r\n                  </button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <mat-menu #nestedmenu=\"matMenu\">\r\n                <button mat-menu-item>\r\n                  <mat-icon>mail_outline</mat-icon>\r\n                  <span>Item 1</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>call</mat-icon>\r\n                  <span>Item 2</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>chat</mat-icon>\r\n                  <span>Item 3</span>\r\n                </button>\r\n              </mat-menu>\r\n              <!-- context menu end -->\r\n\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { AdvanceTableService } from './advance-table.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { AdvanceTable } from './advance-table.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UnsubscribeOnDestroyAdapter } from '../../shared/UnsubscribeOnDestroyAdapter';\r\n\r\n@Component({\r\n  selector: 'app-advance-table',\r\n  templateUrl: './advance-table.component.html',\r\n  styleUrls: ['./advance-table.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class AdvanceTableComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    'select',\r\n    'img',\r\n    'fName',\r\n    'lName',\r\n    'email',\r\n    'gender',\r\n    'bDate',\r\n    'mobile',\r\n    'address',\r\n    'country',\r\n    'actions'\r\n  ];\r\n  exampleDatabase: AdvanceTableService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<AdvanceTable>(true, []);\r\n  id: number;\r\n  advanceTable: AdvanceTable | null;\r\n\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public advanceTableService: AdvanceTableService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        advanceTable: this.advanceTable,\r\n        action: 'add'\r\n      },\r\n      direction: tempDirection\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.advanceTableService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        advanceTable: row,\r\n        action: 'edit'\r\n      },\r\n      direction: tempDirection\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.advanceTableService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<AdvanceTable>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new AdvanceTableService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName\r\n    });\r\n  }\r\n\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: AdvanceTable) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<AdvanceTable> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: AdvanceTable[] = [];\r\n  renderedData: AdvanceTable[] = [];\r\n  constructor(\r\n    public exampleDatabase: AdvanceTableService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<AdvanceTable[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page\r\n    ];\r\n    this.exampleDatabase.getAllAdvanceTables();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((advanceTable: AdvanceTable) => {\r\n            const searchStr = (\r\n              advanceTable.fName +\r\n              advanceTable.lName +\r\n              advanceTable.email +\r\n              advanceTable.mobile +\r\n              advanceTable.gender +\r\n              advanceTable.bDate +\r\n              advanceTable.address +\r\n              advanceTable.country\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: AdvanceTable[]): AdvanceTable[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'fName':\r\n          [propertyA, propertyB] = [a.fName, b.fName];\r\n          break;\r\n        case 'lName':\r\n          [propertyA, propertyB] = [a.lName, b.lName];\r\n          break;\r\n        case 'email':\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        case 'address':\r\n          [propertyA, propertyB] = [a.address, b.address];\r\n          break;\r\n        case 'mobile':\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { formatDate } from '@angular/common';\r\nexport class AdvanceTable {\r\n  id: number;\r\n  img: string;\r\n  fName: string;\r\n  lName: string;\r\n  email: string;\r\n  gender: string;\r\n  bDate: string;\r\n  mobile: string;\r\n  address: string;\r\n  country: string;\r\n  constructor(advanceTable) {\r\n    {\r\n      this.id = advanceTable.id || this.getRandomID();\r\n      this.img = advanceTable.avatar || 'assets/images/user/user1.jpg';\r\n      this.fName = advanceTable.fName || '';\r\n      this.lName = advanceTable.lName || '';\r\n      this.email = advanceTable.email || '';\r\n      this.gender = advanceTable.gender || 'male';\r\n      this.bDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.mobile = advanceTable.mobile || '';\r\n      this.address = advanceTable.address || '';\r\n      this.country = advanceTable.country || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AdvanceTable } from './advance-table.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { UnsubscribeOnDestroyAdapter } from '../../shared/UnsubscribeOnDestroyAdapter';\r\n@Injectable()\r\nexport class AdvanceTableService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = 'assets/data/advanceTable.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<AdvanceTable[]> = new BehaviorSubject<\r\n    AdvanceTable[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): AdvanceTable[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllAdvanceTables(): void {\r\n    this.subs.sink = this.httpClient\r\n      .get<AdvanceTable[]>(this.API_URL)\r\n      .subscribe(\r\n        (data) => {\r\n          this.isTblLoading = false;\r\n          this.dataChange.next(data);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          this.isTblLoading = false;\r\n          console.log(error.name + ' ' + error.message);\r\n        }\r\n      );\r\n  }\r\n  addAdvanceTable(advanceTable: AdvanceTable): void {\r\n    this.dialogData = advanceTable;\r\n\r\n    /*  this.httpClient.post(this.API_URL, advanceTable).subscribe(data => {\r\n      this.dialogData = advanceTable;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateAdvanceTable(advanceTable: AdvanceTable): void {\r\n    this.dialogData = advanceTable;\r\n\r\n    /* this.httpClient.put(this.API_URL + advanceTable.id, advanceTable).subscribe(data => {\r\n      this.dialogData = advanceTable;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteAdvanceTable(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { AdvanceTableService } from '../../advance-table.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public advanceTableService: AdvanceTableService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.advanceTableService.deleteAdvanceTable(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Name: </span>{{data.fName}} {{data.lName}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Email: </span>{{ data.email }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <img [src]='advanceTable.img' alt=\"avatar\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"advanceTableForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>First Name</mat-label>\r\n            <input matInput formControlName=\"fName\">\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"advanceTableForm.get('fName').hasError('required')\">\r\n              First Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Last Name</mat-label>\r\n            <input matInput formControlName=\"lName\">\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"advanceTableForm.get('lName').hasError('required')\">\r\n              Last Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"m-b-20\">\r\n            <mat-label class=\"msr-3\">Gender:</mat-label>\r\n            <mat-radio-group aria-label=\"Select gender\" formControlName=\"gender\" required>\r\n              <mat-radio-button value=\"male\">Male</mat-radio-button>\r\n              <mat-radio-button value=\"female\">Female</mat-radio-button>\r\n              <mat-error *ngIf=\"advanceTableForm.get('gender').hasError('required')\">\r\n                Select gender\r\n              </mat-error>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" required>\r\n            <mat-icon matSuffix>email</mat-icon>\r\n            <mat-error\r\n              *ngIf=\"advanceTableForm.get('email').hasError('required') || advanceTableForm.get('email').touched\">\r\n              Please enter a valid email address\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Birth date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"bDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"advanceTableForm.get('bDate').hasError('required')\">\r\n              Please select date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Mobile</mat-label>\r\n            <input matInput formControlName=\"mobile\" type=\"number\">\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"advanceTableForm.get('mobile').hasError('required')\">\r\n              Mobile is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n            <mat-label>Country</mat-label>\r\n            <mat-select formControlName=\"country\" required>\r\n              <mat-option [value]=\"'india'\">\r\n                India\r\n              </mat-option>\r\n              <mat-option [value]=\"'usa'\">\r\n                USA\r\n              </mat-option>\r\n              <mat-option [value]=\"'france'\">\r\n                France\r\n              </mat-option>\r\n              <mat-option [value]=\"'germany'\">\r\n                Germany\r\n              </mat-option>\r\n              <mat-option [value]=\"'spain'\">\r\n                Spain\r\n              </mat-option>\r\n              <mat-option [value]=\"'turkey'\">\r\n                Turkey\r\n              </mat-option>\r\n              <mat-option [value]=\"'other'\">\r\n                Other\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"advanceTableForm.get('country').hasError('required')\">\r\n              Country Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Address</mat-label>\r\n            <textarea matInput formControlName=\"address\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!advanceTableForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { AdvanceTableService } from '../../advance-table.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { AdvanceTable } from '../../advance-table.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  advanceTableForm: FormGroup;\r\n  advanceTable: AdvanceTable;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public advanceTableService: AdvanceTableService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle =\r\n        data.advanceTable.fName + ' ' + data.advanceTable.lName;\r\n      this.advanceTable = data.advanceTable;\r\n    } else {\r\n      this.dialogTitle = 'New Record';\r\n      this.advanceTable = new AdvanceTable({});\r\n    }\r\n    this.advanceTableForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.advanceTable.id],\r\n      img: [this.advanceTable.img],\r\n      fName: [this.advanceTable.fName, [Validators.required]],\r\n      lName: [this.advanceTable.lName, [Validators.required]],\r\n      email: [\r\n        this.advanceTable.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      gender: [this.advanceTable.gender],\r\n      bDate: [\r\n        formatDate(this.advanceTable.bDate, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      address: [this.advanceTable.address],\r\n      mobile: [this.advanceTable.mobile, [Validators.required]],\r\n      country: [this.advanceTable.country]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.advanceTableService.addAdvanceTable(\r\n      this.advanceTableForm.getRawValue()\r\n    );\r\n  }\r\n}\r\n"]}