{"version":3,"sources":["./src/app/views/advance-table/advance-table-routing.module.ts","./src/app/views/advance-table/advance-table.component.ts","./src/app/views/advance-table/advance-table.component.html","./src/app/views/advance-table/advance-table.model.ts","./src/app/views/advance-table/advance-table.module.ts","./src/app/views/advance-table/advance-table.service.ts","./src/app/views/advance-table/dialogs/delete/delete.component.ts","./src/app/views/advance-table/dialogs/delete/delete.component.html","./src/app/views/advance-table/dialogs/form-dialog/form-dialog.component.ts","./src/app/views/advance-table/dialogs/form-dialog/form-dialog.component.html"],"names":[],"mappings":"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","file":"src_app_views_advance-table_advance-table_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdvanceTableComponent } from './advance-table.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdvanceTableComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdvanceTableRoutingModule {}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { AdvanceTableService } from './advance-table.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { AdvanceTable } from './advance-table.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UnsubscribeOnDestroyAdapter } from '../../shared/UnsubscribeOnDestroyAdapter';\r\n\r\n@Component({\r\n  selector: 'app-advance-table',\r\n  templateUrl: './advance-table.component.html',\r\n  styleUrls: ['./advance-table.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class AdvanceTableComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    'select',\r\n    'img',\r\n    'fName',\r\n    'lName',\r\n    'email',\r\n    'gender',\r\n    'bDate',\r\n    'mobile',\r\n    'address',\r\n    'country',\r\n    'actions'\r\n  ];\r\n  exampleDatabase: AdvanceTableService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<AdvanceTable>(true, []);\r\n  id: number;\r\n  advanceTable: AdvanceTable | null;\r\n\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public advanceTableService: AdvanceTableService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        advanceTable: this.advanceTable,\r\n        action: 'add'\r\n      },\r\n      direction: tempDirection\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.advanceTableService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        advanceTable: row,\r\n        action: 'edit'\r\n      },\r\n      direction: tempDirection\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.advanceTableService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<AdvanceTable>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new AdvanceTableService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName\r\n    });\r\n  }\r\n\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: AdvanceTable) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<AdvanceTable> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: AdvanceTable[] = [];\r\n  renderedData: AdvanceTable[] = [];\r\n  constructor(\r\n    public exampleDatabase: AdvanceTableService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<AdvanceTable[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page\r\n    ];\r\n    this.exampleDatabase.getAllAdvanceTables();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((advanceTable: AdvanceTable) => {\r\n            const searchStr = (\r\n              advanceTable.fName +\r\n              advanceTable.lName +\r\n              advanceTable.email +\r\n              advanceTable.mobile +\r\n              advanceTable.gender +\r\n              advanceTable.bDate +\r\n              advanceTable.address +\r\n              advanceTable.country\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: AdvanceTable[]): AdvanceTable[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'fName':\r\n          [propertyA, propertyB] = [a.fName, b.fName];\r\n          break;\r\n        case 'lName':\r\n          [propertyA, propertyB] = [a.lName, b.lName];\r\n          break;\r\n        case 'email':\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        case 'address':\r\n          [propertyA, propertyB] = [a.address, b.address];\r\n          break;\r\n        case 'mobile':\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Table</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Table</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"alert alert-primary\">\r\n      Advance table component is develop using <strong>Angular Material Table</strong>. Main\r\n      features are:<br><br>\r\n      <ul class=\"fa-ul\">\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Searching\r\n          Records In Table\r\n        </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Sorting Records\r\n          In Table\r\n        </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Add, Update,\r\n          Delete In Table Record\r\n        </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Row Click Edit\r\n          Table Record\r\n        </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Context Menu,\r\n          And Nested Context Menu\r\n        </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Crud Operations\r\n          Using Context Menu </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Multi select row\r\n          using checkbox </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Multiple delete\r\n          rows using checkbox </li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Refresh Table\r\n          Data</li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Pagination\r\n          Supported</li>\r\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Row Per Page\r\n          Options</li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Table Header</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"img\">\r\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\"> Image\r\n                  </mat-header-cell>\r\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-6\"> <img\r\n                      [src]=\"row.img\" />\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"fName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-8'\">First Name\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-8'\">\r\n                    {{row.fName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-8'\">Last Name\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-8'\">\r\n                    {{row.lName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"gender\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-7'\">Gender\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-7'\">\r\n                    {{row.gender}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"bDate\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Birth Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.bDate | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mobile\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.mobile}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"address\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-20'\">Address\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-20'\">\r\n                    {{row.address}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"country\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Country</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.country}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <!-- context menu start -->\r\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n              </div>\r\n              <mat-menu #contextMenu=\"matMenu\">\r\n                <ng-template matMenuContent let-item=\"item\">\r\n                  <button mat-menu-item (click)=\"addNew()\">\r\n                    <mat-icon>add_box</mat-icon>\r\n                    <span>Add Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"editCall(item)\">\r\n                    <mat-icon>create</mat-icon>\r\n                    <span>Edit Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                    <span>Delete Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"refresh()\">\r\n                    <mat-icon>refresh</mat-icon>\r\n                    <span>Refresh Record</span>\r\n                  </button>\r\n                  <button mat-menu-item disabled>\r\n                    <mat-icon>no_encryption</mat-icon>\r\n                    <span>Disable</span>\r\n                  </button>\r\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                    <mat-icon>list_alt</mat-icon>\r\n                    <span> Nested Menu</span>\r\n                  </button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <mat-menu #nestedmenu=\"matMenu\">\r\n                <button mat-menu-item>\r\n                  <mat-icon>mail_outline</mat-icon>\r\n                  <span>Item 1</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>call</mat-icon>\r\n                  <span>Item 2</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>chat</mat-icon>\r\n                  <span>Item 3</span>\r\n                </button>\r\n              </mat-menu>\r\n              <!-- context menu end -->\r\n\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { formatDate } from '@angular/common';\r\nexport class AdvanceTable {\r\n  id: number;\r\n  img: string;\r\n  fName: string;\r\n  lName: string;\r\n  email: string;\r\n  gender: string;\r\n  bDate: string;\r\n  mobile: string;\r\n  address: string;\r\n  country: string;\r\n  constructor(advanceTable) {\r\n    {\r\n      this.id = advanceTable.id || this.getRandomID();\r\n      this.img = advanceTable.avatar || 'assets/images/user/user1.jpg';\r\n      this.fName = advanceTable.fName || '';\r\n      this.lName = advanceTable.lName || '';\r\n      this.email = advanceTable.email || '';\r\n      this.gender = advanceTable.gender || 'male';\r\n      this.bDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.mobile = advanceTable.mobile || '';\r\n      this.address = advanceTable.address || '';\r\n      this.country = advanceTable.country || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AdvanceTableRoutingModule } from './advance-table-routing.module';\r\nimport { AdvanceTableComponent } from './advance-table.component';\r\nimport { FormDialogComponent as advanceTableForm } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\n\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { AdvanceTableService } from './advance-table.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdvanceTableComponent,\r\n    advanceTableForm,\r\n    DeleteDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AdvanceTableRoutingModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MaterialFileInputModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [AdvanceTableService]\r\n})\r\nexport class AdvanceTableModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AdvanceTable } from './advance-table.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { UnsubscribeOnDestroyAdapter } from '../../shared/UnsubscribeOnDestroyAdapter';\r\n@Injectable()\r\nexport class AdvanceTableService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = 'assets/data/advanceTable.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<AdvanceTable[]> = new BehaviorSubject<\r\n    AdvanceTable[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): AdvanceTable[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllAdvanceTables(): void {\r\n    this.subs.sink = this.httpClient\r\n      .get<AdvanceTable[]>(this.API_URL)\r\n      .subscribe(\r\n        (data) => {\r\n          this.isTblLoading = false;\r\n          this.dataChange.next(data);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          this.isTblLoading = false;\r\n          console.log(error.name + ' ' + error.message);\r\n        }\r\n      );\r\n  }\r\n  addAdvanceTable(advanceTable: AdvanceTable): void {\r\n    this.dialogData = advanceTable;\r\n\r\n    /*  this.httpClient.post(this.API_URL, advanceTable).subscribe(data => {\r\n      this.dialogData = advanceTable;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateAdvanceTable(advanceTable: AdvanceTable): void {\r\n    this.dialogData = advanceTable;\r\n\r\n    /* this.httpClient.put(this.API_URL + advanceTable.id, advanceTable).subscribe(data => {\r\n      this.dialogData = advanceTable;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteAdvanceTable(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { AdvanceTableService } from '../../advance-table.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public advanceTableService: AdvanceTableService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.advanceTableService.deleteAdvanceTable(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Name: </span>{{data.fName}} {{data.lName}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Email: </span>{{ data.email }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { AdvanceTableService } from '../../advance-table.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { AdvanceTable } from '../../advance-table.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  advanceTableForm: FormGroup;\r\n  advanceTable: AdvanceTable;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public advanceTableService: AdvanceTableService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle =\r\n        data.advanceTable.fName + ' ' + data.advanceTable.lName;\r\n      this.advanceTable = data.advanceTable;\r\n    } else {\r\n      this.dialogTitle = 'New Record';\r\n      this.advanceTable = new AdvanceTable({});\r\n    }\r\n    this.advanceTableForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.advanceTable.id],\r\n      img: [this.advanceTable.img],\r\n      fName: [this.advanceTable.fName, [Validators.required]],\r\n      lName: [this.advanceTable.lName, [Validators.required]],\r\n      email: [\r\n        this.advanceTable.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      gender: [this.advanceTable.gender],\r\n      bDate: [\r\n        formatDate(this.advanceTable.bDate, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      address: [this.advanceTable.address],\r\n      mobile: [this.advanceTable.mobile, [Validators.required]],\r\n      country: [this.advanceTable.country]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.advanceTableService.addAdvanceTable(\r\n      this.advanceTableForm.getRawValue()\r\n    );\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <img [src]='advanceTable.img' alt=\"avatar\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"advanceTableForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>First Name</mat-label>\r\n            <input matInput formControlName=\"fName\">\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"advanceTableForm.get('fName').hasError('required')\">\r\n              First Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Last Name</mat-label>\r\n            <input matInput formControlName=\"lName\">\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"advanceTableForm.get('lName').hasError('required')\">\r\n              Last Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"m-b-20\">\r\n            <mat-label class=\"msr-3\">Gender:</mat-label>\r\n            <mat-radio-group aria-label=\"Select gender\" formControlName=\"gender\" required>\r\n              <mat-radio-button value=\"male\">Male</mat-radio-button>\r\n              <mat-radio-button value=\"female\">Female</mat-radio-button>\r\n              <mat-error *ngIf=\"advanceTableForm.get('gender').hasError('required')\">\r\n                Select gender\r\n              </mat-error>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" required>\r\n            <mat-icon matSuffix>email</mat-icon>\r\n            <mat-error\r\n              *ngIf=\"advanceTableForm.get('email').hasError('required') || advanceTableForm.get('email').touched\">\r\n              Please enter a valid email address\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Birth date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"bDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"advanceTableForm.get('bDate').hasError('required')\">\r\n              Please select date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Mobile</mat-label>\r\n            <input matInput formControlName=\"mobile\" type=\"number\">\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"advanceTableForm.get('mobile').hasError('required')\">\r\n              Mobile is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n            <mat-label>Country</mat-label>\r\n            <mat-select formControlName=\"country\" required>\r\n              <mat-option [value]=\"'india'\">\r\n                India\r\n              </mat-option>\r\n              <mat-option [value]=\"'usa'\">\r\n                USA\r\n              </mat-option>\r\n              <mat-option [value]=\"'france'\">\r\n                France\r\n              </mat-option>\r\n              <mat-option [value]=\"'germany'\">\r\n                Germany\r\n              </mat-option>\r\n              <mat-option [value]=\"'spain'\">\r\n                Spain\r\n              </mat-option>\r\n              <mat-option [value]=\"'turkey'\">\r\n                Turkey\r\n              </mat-option>\r\n              <mat-option [value]=\"'other'\">\r\n                Other\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"advanceTableForm.get('country').hasError('required')\">\r\n              Country Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Address</mat-label>\r\n            <textarea matInput formControlName=\"address\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!advanceTableForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}