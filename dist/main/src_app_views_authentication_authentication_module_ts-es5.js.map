{"version":3,"sources":["webpack:///src/app/views/authentication/authentication-routing.module.ts","webpack:///src/app/views/authentication/authentication.module.ts","webpack:///src/app/views/authentication/forgot-password/forgot-password.component.html","webpack:///src/app/views/authentication/forgot-password/forgot-password.component.ts","webpack:///src/app/views/authentication/locked/locked.component.html","webpack:///src/app/views/authentication/locked/locked.component.ts","webpack:///src/app/views/authentication/page500/page500.component.ts","webpack:///src/app/views/authentication/page500/page500.component.html","webpack:///src/app/views/authentication/signin/signin.component.html","webpack:///src/app/views/authentication/signin/signin.component.ts","webpack:///src/app/views/authentication/signup/signup.component.html","webpack:///src/app/views/authentication/signup/signup.component.ts"],"names":["routes","path","redirectTo","pathMatch","component","SigninComponent","SignupComponent","ForgotPasswordComponent","LockedComponent","Page404Component","Page500Component","AuthenticationRoutingModule","RouterModule","AuthenticationModule","CommonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatIconModule","MatButtonModule","formBuilder","route","router","submitted","loginForm","group","email","Validators","controls","invalid","navigate","onSubmit","hide","password","submit","authService","error","subs","sink","login","f","value","subscribe","res","token","currentUserValue","UnsubscribeOnDestroyAdapter","chide","username","cpassword"],"mappings":"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","file":"src_app_views_authentication_authentication_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { Page500Component } from './page500/page500.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: ForgotPasswordComponent\r\n  },\r\n  {\r\n    path: 'locked',\r\n    component: LockedComponent\r\n  },\r\n  {\r\n    path: 'page404',\r\n    component: Page404Component\r\n  },\r\n  {\r\n    path: 'page500',\r\n    component: Page500Component\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { Page500Component } from './page500/page500.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n@NgModule({\r\n  declarations: [\r\n    Page500Component,\r\n    Page404Component,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    LockedComponent,\r\n    ForgotPasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","<div class=\"container-fluid p-0\">\r\n  <div class=\"row g-0\">\r\n    <div class=\"col-lg-4\">\r\n      <div class=\"auth-content p-4 d-flex align-items-center min-vh-100\">\r\n        <div class=\"w-100\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-lg-9\">\r\n              <div>\r\n                <div class=\"text-center\">\r\n                  <div>\r\n                    <a routerLink=\"\" class=\"logo-full\"><img src=\"assets/images/logo-full.png\" alt=\"logo-full\"></a>\r\n                  </div>\r\n\r\n                  <h4 class=\"font-20 mt-4\">Forgotten Password ?</h4>\r\n                  <p class=\"text-muted\">Enter your email to reset your password</p>\r\n                </div>\r\n\r\n                <div class=\"p-2 mt-5\">\r\n                  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group auth-form-group mb-4\">\r\n                      <mat-icon matSuffix class=\"auth-page-icon\">email</mat-icon>\r\n                      <input type=\"email\" formControlName=\"email\" class=\"form-control auth-control\" id=\"email\"\r\n                        placeholder=\"Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\r\n                      <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                        <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"container-login100-form-btn\">\r\n                      <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n                        Reset My Password\r\n                      </button>\r\n                    </div>\r\n\r\n                  </form>\r\n                </div>\r\n\r\n                <div class=\"mt-5 text-center\">\r\n                  <p>Want To Login ? <a routerLink=\"/authentication/signin\" class=\"font-weight-medium text-primary\">\r\n                      Log in </a> </p>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-8\">\r\n      <div class=\"auth-bg\">\r\n        <div class=\"bg-overlay\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ]\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid p-0\">\r\n  <div class=\"row g-0\">\r\n    <div class=\"col-lg-4\">\r\n      <div class=\"auth-content p-4 d-flex align-items-center min-vh-100\">\r\n        <div class=\"w-100\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-lg-9\">\r\n              <div>\r\n                <div class=\"text-center\">\r\n                  <div>\r\n                    <a routerLink=\"\" class=\"logo-full\"><img src=\"assets/images/logo-full.png\" alt=\"logo-full\"></a>\r\n                  </div>\r\n\r\n                  <h4 class=\"font-20 mt-4\">Lock screen</h4>\r\n                  <p class=\"text-muted\">Enter valid password to unlock the screen.</p>\r\n                </div>\r\n                <div class=\"login100-form-logo\">\r\n                  <div class=\"image\">\r\n                    <img src=\"assets/images/usrbig.jpg\" alt=\"User\">\r\n                  </div>\r\n                </div>\r\n                <span class=\"auth-user-name font-20 p-b-10 p-t-27\">\r\n                  Emily Smith\r\n                </span>\r\n                <div class=\"text-center\">\r\n                  <p class=\"txt1\">\r\n                    Locked\r\n                  </p>\r\n                </div>\r\n                <div class=\"p-2 mt-5\">\r\n                  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group auth-form-group mb-4\">\r\n                      <mat-icon matSuffix class=\"auth-page-icon\">vpn_key</mat-icon>\r\n                      <input type=\"password\" formControlName=\"password\" class=\"form-control auth-control\" id=\"password\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"Password\" />\r\n                      <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\r\n                      <div class=\"form-check\">\r\n                        <label class=\"form-check-label\">\r\n                          <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> Remember me\r\n                          <span class=\"form-check-sign\">\r\n                            <span class=\"check\"></span>\r\n                          </span>\r\n                        </label>\r\n                      </div>\r\n                      <div>\r\n                        <a class=\"txt1\" routerLink=\"/authentication/forgot-password\">Forgot Password?</a>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"container-login100-form-btn\">\r\n                      <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n\r\n                  </form>\r\n                </div>\r\n\r\n                <div class=\"mt-5 text-center\">\r\n                  <p>Don't have an account ? <a routerLink=\"/authentication/signup\"\r\n                      class=\"font-weight-medium text-primary\">\r\n                      Register </a> </p>\r\n                  <div class=\"login100-form-social flex-c-m\">\r\n                    <a href=\"#\" class=\"login100-form-social-item flex-c-m bg1 m-r-5\">\r\n                      <i class=\"fab fa-facebook-f\"></i>\r\n                    </a>\r\n                    <a href=\"#\" class=\"login100-form-social-item flex-c-m bg2 m-r-5\">\r\n                      <i class=\"fab fa-twitter\"></i>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-8\">\r\n      <div class=\"auth-bg\">\r\n        <div class=\"bg-overlay\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-locked',\r\n  templateUrl: './locked.component.html',\r\n  styleUrls: ['./locked.component.scss']\r\n})\r\nexport class LockedComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  hide = true;\r\n  constructor(private formBuilder: FormBuilder, private router: Router) {}\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-page500',\r\n  templateUrl: './page500.component.html',\r\n  styleUrls: ['./page500.component.scss']\r\n})\r\nexport class Page500Component implements OnInit {\r\n  constructor(private router: Router) {}\r\n  ngOnInit() {}\r\n  submit() {\r\n    this.router.navigate(['/authentication/signin']);\r\n  }\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form\">\r\n        <span class=\"error-header p-b-45\">\r\n          500\r\n        </span>\r\n        <span class=\"error-subheader2 p-b-5\">\r\n          Oops, Something went wrong. Please try after some times.\r\n        </span>\r\n        <div class=\"container-login100-form-btn p-t-30\t\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" (click)='submit()'>\r\n            Go To Home Page\r\n          </button>\r\n        </div>\r\n        <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n          <div>\r\n            <a href=\"#\" class=\"txt1\">\r\n              Need Help?\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-03.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","  <div class=\"container-fluid p-0\">\r\n    <div class=\"row g-0\">\r\n      <div class=\"col-lg-4\">\r\n        <div class=\"auth-content p-4 d-flex align-items-center min-vh-100\">\r\n          <div class=\"w-100\">\r\n            <div class=\"row justify-content-center\">\r\n              <div class=\"col-lg-9\">\r\n                <div>\r\n                  <div class=\"text-center\">\r\n                    <div>\r\n                      <a routerLink=\"\" class=\"logo-full\"><img src=\"assets/images/logo-full.png\" alt=\"logo-full\"></a>\r\n                    </div>\r\n\r\n                    <h4 class=\"font-20 mt-4\">Welcome Back !</h4>\r\n                    <p class=\"text-muted\">Sign in to continue to Lorax.</p>\r\n                  </div>\r\n\r\n                  <div class=\"p-2 mt-5\">\r\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                      <div *ngIf=\"error\" class=\"alert alert-danger mb-3 mt-0\">{{error}}</div>\r\n                      <div class=\"form-group auth-form-group mb-4\">\r\n                        <mat-icon matSuffix class=\"auth-page-icon\">email</mat-icon>\r\n                        <input type=\"email\" formControlName=\"email\" class=\"form-control auth-control\" id=\"email\"\r\n                          placeholder=\"Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\r\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                          <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"form-group auth-form-group mb-4\">\r\n                        <mat-icon matSuffix class=\"auth-page-icon\">vpn_key</mat-icon>\r\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control auth-control\"\r\n                          id=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n                          placeholder=\"Password\" />\r\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\r\n                        <div class=\"form-check\">\r\n                          <label class=\"form-check-label\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> Remember me\r\n                            <span class=\"form-check-sign\">\r\n                              <span class=\"check\"></span>\r\n                            </span>\r\n                          </label>\r\n                        </div>\r\n                        <div>\r\n                          <a class=\"txt1\" routerLink=\"/authentication/forgot-password\">Forgot Password?</a>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"container-login100-form-btn\">\r\n                        <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n                          Login\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"mt-5 text-center\">\r\n                    <p>Don't have an account ? <a routerLink=\"/authentication/signup\"\r\n                        class=\"font-weight-medium text-primary\">\r\n                        Register </a> </p>\r\n                    <ul class=\"list-unstyled social-icon mb-0 mt-3\">\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                          <i class=\"fab fa-google\"></i>\r\n                        </a></li>\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\r\n                          <i class=\"fab fa-facebook-f\"></i>\r\n                        </a></li>\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                          <i class=\"fab fa-twitter\"></i>\r\n                        </a></li>\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                          <i class=\"fab fa-linkedin-in\"></i>\r\n                        </a></li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-8\">\r\n        <div class=\"auth-bg\">\r\n          <div class=\"bg-overlay\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/core/service/auth.service';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss']\r\n})\r\nexport class SigninComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    super();\r\n  }\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: [\r\n        'admin@lorax.com',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      password: ['admin', Validators.required]\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.error = '';\r\n    if (this.loginForm.invalid) {\r\n      this.error = 'Username and Password not valid !';\r\n      return;\r\n    } else {\r\n      this.subs.sink = this.authService\r\n        .login(this.f.email.value, this.f.password.value)\r\n        .subscribe(\r\n          (res) => {\r\n            if (res) {\r\n              const token = this.authService.currentUserValue.token;\r\n              if (token) {\r\n                this.router.navigate(['/dashboard/main']);\r\n              }\r\n            } else {\r\n              this.error = 'Invalid Login';\r\n            }\r\n          },\r\n          (error) => {\r\n            this.error = error;\r\n            this.submitted = false;\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","  <div class=\"container-fluid p-0\">\r\n    <div class=\"row g-0\">\r\n      <div class=\"col-lg-4\">\r\n        <div class=\"auth-content p-4 d-flex align-items-center min-vh-100\">\r\n          <div class=\"w-100\">\r\n            <div class=\"row justify-content-center\">\r\n              <div class=\"col-lg-9\">\r\n                <div>\r\n                  <div class=\"text-center\">\r\n                    <div>\r\n                      <a routerLink=\"\" class=\"logo-full\"><img src=\"assets/images/logo-full.png\" alt=\"logo-full\"></a>\r\n                    </div>\r\n                    <h4 class=\"font-20 mt-4\">Register New User</h4>\r\n                    <p class=\"text-muted\">Lifetime Free Account.</p>\r\n                  </div>\r\n                  <div class=\"p-2 mt-5\">\r\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                      <div class=\"form-group auth-form-group mb-4\">\r\n                        <mat-icon matSuffix class=\"auth-page-icon\">face</mat-icon>\r\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control auth-control\" id=\"username\"\r\n                          placeholder=\"Username\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\">\r\n                        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group auth-form-group mb-4\">\r\n                        <mat-icon matSuffix class=\"auth-page-icon\">email</mat-icon>\r\n                        <input type=\"email\" formControlName=\"email\" class=\"form-control auth-control\" id=\"email\"\r\n                          placeholder=\"Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\r\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                          <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"form-group auth-form-group mb-4\">\r\n                        <mat-icon matSuffix class=\"auth-page-icon\">vpn_key</mat-icon>\r\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control auth-control\"\r\n                          id=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n                          placeholder=\"Password\" />\r\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"form-group auth-form-group mb-4\">\r\n                        <mat-icon matSuffix class=\"auth-page-icon\">vpn_key</mat-icon>\r\n                        <input type=\"password\" formControlName=\"cpassword\" class=\"form-control auth-control\"\r\n                          id=\"cpassword\" [ngClass]=\"{ 'is-invalid': submitted && f.cpassword.errors }\"\r\n                          placeholder=\"Confirm Password\" />\r\n                        <div *ngIf=\"submitted && f.cpassword.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.cpassword.errors.required\">Confirm Password is required</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\r\n                        <div>\r\n                          <span>Already Registered? <a routerLink=\"/authentication/signin\">\r\n                              Login\r\n                            </a></span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"container-login100-form-btn\">\r\n                        <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n                          Register\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"mt-3 text-center\">\r\n                    <p> or sign up using </p>\r\n                    <ul class=\"list-unstyled social-icon mb-0 mt-3\">\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                          <i class=\"fab fa-google\"></i>\r\n                        </a></li>\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\r\n                          <i class=\"fab fa-facebook-f\"></i>\r\n                        </a></li>\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                          <i class=\"fab fa-twitter\"></i>\r\n                        </a></li>\r\n                      <li class=\"list-inline-item m-2\"><a href=\"javascript:void(0)\" class=\"rounded\">\r\n                          <i class=\"fab fa-linkedin-in\"></i>\r\n                        </a></li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-8\">\r\n        <div class=\"auth-bg\">\r\n          <div class=\"bg-overlay\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      password: ['', Validators.required],\r\n      cpassword: ['', Validators.required]\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n"]}