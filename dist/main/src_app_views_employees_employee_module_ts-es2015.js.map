{"version":3,"sources":["./src/app/core/models/employee.model.ts","./src/app/core/service/attibute.type.service.ts","./src/app/core/service/attribute.category.service.ts","./src/app/core/service/attribute.service.ts","./src/app/core/service/employee.attribute.service.ts","./src/app/core/service/employee.role.service.ts","./src/app/core/service/employee.service.ts","./src/app/shared/components/component.module.ts","./src/app/shared/components/custom-table/custom-table.component.ts","./src/app/shared/components/custom-table/custom-table.component.html","./src/app/views/contacts/contacts.model.ts","./src/app/views/contacts/contacts.service.ts","./src/app/views/employees/delete/delete.component.ts","./src/app/views/employees/delete/delete.component.html","./src/app/views/employees/employee-detalhes/employee-detalhes.component.ts","./src/app/views/employees/employee-detalhes/employee-detalhes.component.html","./src/app/views/employees/employee-routing.module.ts","./src/app/views/employees/employee.component.ts","./src/app/views/employees/employee.component.html","./src/app/views/employees/employee.module.ts","./src/app/views/employees/form/form.component.ts","./src/app/views/employees/form/form.component.html"],"names":[],"mappings":"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","file":"src_app_views_employees_employee_module_ts-es2015.js","sourcesContent":["export class Employee {\r\n  id: string;\r\n  firstName: string;\r\n  email: string;\r\n  photoUrl: string;\r\n  employeeRoleId: string;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Attribute } from '@angular/compiler';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AttributeTypeService {\r\n\r\n    readonly baseUrl: string;\r\n\r\n    constructor(\r\n        @Inject('BASE_URL_CHALLENGE') baseUrl: string,\r\n        private http: HttpClient) {\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    getAll(): Observable<any> {\r\n        return this.http.get<any>(`${this.baseUrl}/AttributeType`);\r\n    }\r\n\r\n    getByAttributeCategoryId(id: string): Observable<any[]> {\r\n        return this.http.get<any[]>(`${this.baseUrl}/AttributeType/attribute-category/${id}`);\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Attribute } from '@angular/compiler';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AttributeCategoryService {\r\n\r\n    readonly baseUrl: string;\r\n\r\n    constructor(\r\n        @Inject('BASE_URL_CHALLENGE') baseUrl: string,\r\n        private http: HttpClient) {\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    getAll(): Observable<any> {\r\n        return this.http.get<any>(`${this.baseUrl}/AttributeCategory`);\r\n    }\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Attribute } from '../models/attribute.model';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AttributeService {\r\n\r\n    readonly baseUrl: string;\r\n\r\n    constructor(\r\n        @Inject('BASE_URL_CHALLENGE') baseUrl: string,\r\n        private http: HttpClient) {\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    getAll(): Observable<Attribute[]> {\r\n        return this.http.get<Attribute[]>(`${this.baseUrl}/Attribute`);\r\n    }\r\n\r\n    getByAttributeTypeId(id: string): Observable<any[]> {\r\n        return this.http.get<any[]>(`${this.baseUrl}/Attribute/attribute-type/${id}`);\r\n    }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Attribute } from '@angular/compiler';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EmployeeAttribute } from '../models/employee-attribute.model';\r\nimport { ProcessEmployeeAttribute } from '../models/process-employee-attributes.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeAttributeService {\r\n\r\n  readonly baseUrl: string;\r\n\r\n  constructor(\r\n    @Inject('BASE_URL_CHALLENGE') baseUrl: string,\r\n    private http: HttpClient) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  getByEmployeeId(employeeId): Observable<EmployeeAttribute[]> {\r\n    return this.http.get<EmployeeAttribute[]>(`${this.baseUrl}/EmployeeAttribute/employee/${employeeId}`);\r\n  }\r\n\r\n  getByEmployeeProcessAttributes(body): Observable<ProcessEmployeeAttribute> {\r\n    return this.http.post<ProcessEmployeeAttribute>(`${this.baseUrl}/EmployeeAttribute/process-employee-attributes`, body);\r\n  }\r\n\r\n  postSaveEmployeeAttribute(body): Observable<any>{\r\n    return this.http.post<any>(`${this.baseUrl}/EmployeeAttribute`, body);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EmployeeRole } from '../models/employee-role.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EmployeeRoleService {\r\n\r\n    readonly baseUrl: string;\r\n\r\n    constructor(\r\n        @Inject('BASE_URL_CHALLENGE') baseUrl: string,\r\n        private http: HttpClient) {\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    getAll(): Observable<EmployeeRole[]> {\r\n        return this.http.get<EmployeeRole[]>(`${this.baseUrl}/EmployeeRole`);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Employee } from '../models/employee.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  readonly baseUrl: string;\r\n\r\n  constructor(\r\n    @Inject('BASE_URL_CHALLENGE') baseUrl: string,\r\n    private http: HttpClient) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  getAll(): Observable<Employee[]> {\r\n    return this.http.get<Employee[]>(`${this.baseUrl}/Employee`);\r\n  }\r\n\r\n  getById(id: string): Observable<Employee>{\r\n    return this.http.get<Employee>(`${this.baseUrl}/Employee/${id}`);\r\n  }\r\n}\r\n","import { CommonModule, CurrencyPipe } from '@angular/common';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorIntl, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { CustomTableComponent } from './custom-table/custom-table.component';\r\n@NgModule({\r\n    declarations: [CustomTableComponent],\r\n    exports: [CustomTableComponent],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSortModule,\r\n        MatMenuModule,\r\n        MatTabsModule,\r\n        MatDialogModule,\r\n        MatSlideToggleModule,\r\n        MatProgressSpinnerModule\r\n    ],\r\n    providers: [\r\n        { provide: MatPaginatorIntl }\r\n    ]\r\n})\r\nexport class ComponentModule { }\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator, MatPaginatorIntl } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { fromEvent } from 'rxjs';\r\nimport { UnsubscribeOnDestroyAdapter } from '../../UnsubscribeOnDestroyAdapter';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { ListColumn } from 'src/app/core/models/ListColumn';\r\n\r\n@Component({\r\n  selector: 'app-custom-table',\r\n  templateUrl: './custom-table.component.html',\r\n  styleUrls: ['./custom-table.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0px' })),\r\n      state('expanded', style({ height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\n\r\nexport class CustomTableComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\r\n\r\n  @Input() showAddButton: boolean = true;\r\n  @Input() dataSource: MatTableDataSource<any>;\r\n  @Input() isTblLoading: boolean;\r\n  @Input() columns: ListColumn[];\r\n\r\n  @Output() addNew: EventEmitter<any> = new EventEmitter();\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n  @Output() cancel: EventEmitter<any> = new EventEmitter();\r\n  @Output() delete: EventEmitter<any> = new EventEmitter();\r\n  @Output() enable: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n\r\n  constructor(public dialog: MatDialog) {\r\n    super();\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.isTblLoading = true;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n\r\n  get displayedColumns() {\r\n    return this.columns.filter(o => o.visible).map(o => o.property);\r\n  }\r\n\r\n  add() {\r\n    this.addNew.emit();\r\n  }\r\n\r\n  editCall(event) {\r\n    this.edit.emit(event);\r\n  }\r\n\r\n  cancelCall(event) {\r\n    this.cancel.emit(event);\r\n  }\r\n\r\n  deleteItem(event) {\r\n    this.delete.emit(event);\r\n  }\r\n\r\n  customPaginator() {\r\n    const customPaginatorIntl = new MatPaginatorIntl();\r\n\r\n    customPaginatorIntl.itemsPerPageLabel = 'Itens por página';\r\n\r\n    return customPaginatorIntl;\r\n  }\r\n}\r\n","<div class=\"responsive_table\">\r\n  <div class=\"materialTableHeader\">\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <ul class=\"header-buttons-left ml-0\">\r\n          <li class=\"dropdown m-l-20\">\r\n            <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n            <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n              aria-label=\"Search box\">\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <ul class=\"header-buttons\">\r\n          <li>\r\n            <div class=\"icon-button-demo\">\r\n              <button mat-mini-fab color=\"primary\" (click)=\"add()\" *ngIf=\"showAddButton\">\r\n                <mat-icon class=\"col-white\">add</mat-icon>\r\n              </button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <mat-table #table [dataSource]=\"dataSource\" matSort multiTemplateDataRows class=\"mat-cell\">\r\n    <ng-container *ngFor=\"let column of columns\">\r\n      <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\r\n        <mat-header-cell *matHeaderCellDef mat-header-cell mat-sort-header>\r\n          {{ column.name }}</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\" mat-cell>\r\n          <ng-container *ngIf=\"column.type==='date'\">\r\n            {{ row[column.property] | date: 'dd/MM/yyyy hh:mm' }}\r\n          </ng-container>\r\n          <ng-container *ngIf=\"column.type!=='date' && column.type !== 'currency' && column.type!=='color'\">\r\n            {{ row[column.property] }}\r\n          </ng-container>\r\n          <ng-container *ngIf=\"column.type==='currency'\">\r\n            {{row[column.property] | currency:'BRL'}}\r\n          </ng-container>\r\n          <ng-container *ngIf=\"column.type==='color'\">\r\n            <div style=\"width: 20px; height: 20px; border-radius: 50%; background-color: {{row[column.property]}};\"></div>\r\n          </ng-container>\r\n        </mat-cell>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n    </mat-row>\r\n\r\n\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <mat-header-cell *matHeaderCellDef class=\"pr-0\">Editar</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n        <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n          (click)=\"editCall(row)\">\r\n          <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n    </ng-container> -->\r\n  </mat-table>\r\n  \r\n  <div class=\"empty\" *ngIf=\"!isTblLoading && this.dataSource.data.length === 0\">\r\n    Não existem dados para serem exibidos\r\n  </div>\r\n\r\n  <!-- Loading spinner -->\r\n  <div *ngIf=\"isTblLoading\" class=\"tbl-spinner\">\r\n    <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n    </mat-progress-spinner>\r\n  </div>\r\n\r\n  <div *ngIf=\"!dataSource.data\" class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n    No results\r\n  </div>\r\n  <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\">\r\n  </mat-paginator>\r\n</div>\r\n","import { formatDate } from '@angular/common';\r\nexport class Contacts {\r\n  id: number;\r\n  img: string;\r\n  name: string;\r\n  email: string;\r\n  birthDate: string;\r\n  mobile: string;\r\n  address: string;\r\n  note: string;\r\n\r\n  constructor(contacts) {\r\n    {\r\n      this.id = contacts.id || this.getRandomID();\r\n      this.img = contacts.avatar || 'assets/images/user/usrbig1.jpg';\r\n      this.name = contacts.name || '';\r\n      this.email = contacts.email || '';\r\n      this.birthDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.address = contacts.address || '';\r\n      this.mobile = contacts.mobile || '';\r\n      this.note = contacts.note || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Contacts } from './contacts.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { UnsubscribeOnDestroyAdapter } from '../../shared/UnsubscribeOnDestroyAdapter';\r\n@Injectable()\r\nexport class ContactsService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = 'assets/data/contacts.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Contacts[]> = new BehaviorSubject<Contacts[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Contacts[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllContactss(): void {\r\n    this.subs.sink = this.httpClient.get<Contacts[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addContacts(contacts: Contacts): void {\r\n    this.dialogData = contacts;\r\n\r\n    /*  this.httpClient.post(this.API_URL, contacts).subscribe(data => {\r\n      this.dialogData = contacts;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateContacts(contacts: Contacts): void {\r\n    this.dialogData = contacts;\r\n\r\n    /* this.httpClient.put(this.API_URL + contacts.id, contacts).subscribe(data => {\r\n      this.dialogData = contacts;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteContacts(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { ContactsService } from '../../contacts/contacts.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class EmployeeDeleteComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EmployeeDeleteComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public contactsService: ContactsService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.contactsService.deleteContacts(this.data.id);\r\n  }\r\n}\r\n\r\n","<div class=\"container\">\r\n    <h3 mat-dialog-title>Are you sure?</h3>\r\n    <div mat-dialog-content>\r\n      <ul class=\"clearfix\">\r\n        <li>\r\n          <p><span class=\"font-weight-bold\"> Name: </span>{{data.name}}</p>\r\n        </li>\r\n        <li>\r\n          <p><span class=\"font-weight-bold\"> Email: </span>{{ data.email }}</p>\r\n        </li>\r\n        <li>\r\n          <p>\r\n            <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n      <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n        Delete\r\n      </button>\r\n      <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UnsubscribeOnDestroyAdapter } from '../../../shared/UnsubscribeOnDestroyAdapter';\r\nimport { ContactsService } from '../../contacts/contacts.service';\r\nimport { EmployeeService } from 'src/app/core/service/employee.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EChartOption } from 'echarts';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { EmployeeAttributeService } from 'src/app/core/service/employee.attribute.service';\r\nimport { AttributeService } from 'src/app/core/service/attribute.service';\r\nimport { EmployeeAttribute } from 'src/app/core/models/employee-attribute.model';\r\nimport { AttributeTypeService } from 'src/app/core/service/attibute.type.service';\r\nimport { AttributeCategoryService } from 'src/app/core/service/attribute.category.service';\r\nimport { TestComponentRenderer } from '@angular/core/testing';\r\nimport { Attribute } from 'src/app/core/models/attribute.model';\r\nimport { Employee } from 'src/app/core/models/employee.model';\r\nimport { EmployeeRoleService } from 'src/app/core/service/employee.role.service';\r\nimport { EmployeeRole } from 'src/app/core/models/employee-role.model';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\n@Component({\r\n    selector: 'app-employee-detalhes',\r\n    templateUrl: './employee-detalhes.component.html',\r\n    styleUrls: ['./employee-detalhes.component.scss']\r\n})\r\n\r\nexport class EmployeeDetalhesComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\r\n    @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\r\n\r\n    private readonly notifier: NotifierService;\r\n\r\n    /* Pie Chart */\r\n    pieChart: EChartOption = {\r\n        tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n        },\r\n        legend: {\r\n            data: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5'],\r\n            textStyle: {\r\n                color: '#9aa0ac',\r\n                padding: [0, 5, 0, 5]\r\n            }\r\n        },\r\n\r\n        series: [\r\n            {\r\n                name: 'Chart Data',\r\n                type: 'pie',\r\n                radius: '55%',\r\n                center: ['50%', '48%'],\r\n                data: [\r\n                    {\r\n                        value: 335,\r\n                        name: 'Data 1'\r\n                    },\r\n                    {\r\n                        value: 310,\r\n                        name: 'Data 2'\r\n                    },\r\n                    {\r\n                        value: 234,\r\n                        name: 'Data 3'\r\n                    },\r\n                    {\r\n                        value: 135,\r\n                        name: 'Data 4'\r\n                    },\r\n                    {\r\n                        value: 548,\r\n                        name: 'Data 5'\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        color: ['#575B7A', '#DE725C', '#DFC126', '#72BE81', '#50A5D8']\r\n    };\r\n    constructor(\r\n        public httpClient: HttpClient,\r\n        public dialog: MatDialog,\r\n        public contactsService: ContactsService,\r\n        public employeeService: EmployeeService,\r\n        public employeeRoleService: EmployeeRoleService,\r\n        public employeeAttributeService: EmployeeAttributeService,\r\n        public attributeService: AttributeService,\r\n        public attributeTypeService: AttributeTypeService,\r\n        public attributeCategoryService: AttributeCategoryService,\r\n        private snackBar: MatSnackBar,\r\n        private route: ActivatedRoute,\r\n        private notifierService: NotifierService) {\r\n        super();\r\n        this.notifier = notifierService;\r\n    }\r\n    employeelId: string;\r\n\r\n    newScoreForm: FormGroup;\r\n    controlNewScoreCategories: FormControl;\r\n    controlNewScoreTypes: FormControl;\r\n    controlNewScoreAttributes: FormControl;\r\n    controlNewScoreValue: FormControl;\r\n\r\n    newScoreAttributeCategories: any[];\r\n    newScoreAttributeTypes: any[];\r\n    newScoreAttributes: any[];\r\n    newScoreValues: any[];\r\n\r\n    employeeDisplay: any = {};\r\n    employee: Employee = new Employee();\r\n    employeeRoles: EmployeeRole[];\r\n\r\n    listaEmployeeAttribute: EmployeeAttribute[];\r\n    attributes: Attribute[];\r\n    listaEmployeeAttributeDiff: string[] = [];\r\n\r\n    tableContent: any[] = [];\r\n\r\n    attributeCategories = new FormControl();\r\n    // attributeCategoryList: any[] = [];\r\n\r\n    // attributeTypes = new FormControl();\r\n    // attributeTypeList: any[] = [];\r\n\r\n    filtersTypes: any[] = [];\r\n    filtersCategories: any[] = [];\r\n\r\n    tb2columns = [\r\n        { prop: 'attributeName', name: 'Attibute' },\r\n        { prop: 'score', name: 'Score' },\r\n        { prop: 'createdAt', name: 'Evaluation Date' }\r\n    ];\r\n    tb2data = [];\r\n    tb2filteredData = [];\r\n\r\n    ngOnInit() {\r\n        this.controlNewScoreCategories = new FormControl();\r\n        this.controlNewScoreTypes = new FormControl();\r\n        this.controlNewScoreAttributes = new FormControl();\r\n        this.controlNewScoreValue = new FormControl();\r\n\r\n        this.employeelId = this.route.snapshot.paramMap.get('id');\r\n\r\n        this.tb2fetch((data) => {\r\n            this.tb2data = data;\r\n            this.tb2filteredData = data;\r\n        });\r\n        this.getEmployeeRoles(this.employeelId);\r\n\r\n\r\n        this.getEmployeeAttribute(this.employeelId);\r\n        // this.getattributeTypeList();\r\n        // this.getattributeCategoryList();\r\n    }\r\n\r\n    getEmployeeData(id: string) {\r\n        this.employeeService.getById(id).subscribe(response => {\r\n            this.employee = response;\r\n\r\n            let employeeRole = \"\";\r\n            this.employeeRoles.forEach(element => {\r\n                if (this.employee.employeeRoleId === element.id) {\r\n                    employeeRole = element.description;\r\n                }\r\n            });\r\n\r\n            this.employeeDisplay = {\r\n                firstName: this.employee.firstName,\r\n                email: this.employee.email,\r\n                photoUrl: this.employee.photoUrl,\r\n                role: employeeRole\r\n            };\r\n        });\r\n    }\r\n\r\n    getEmployeeRoles(id: string) {\r\n        this.employeeRoleService.getAll().subscribe(response => {\r\n            this.getEmployeeData(id);\r\n            this.employeeRoles = response;\r\n        });\r\n    }\r\n\r\n    getEmployeeAttribute(id: string) {\r\n        this.employeeAttributeService.getByEmployeeId(id).subscribe(response => {\r\n            this.listaEmployeeAttribute = response;\r\n            this.getAllAttributes();\r\n        });\r\n    }\r\n\r\n    filterSelect(event) {\r\n        if (event.value.length > 0) {\r\n            const tableContentFiltered = [];\r\n\r\n            this.tableContent.forEach(element => {\r\n                if (event.value.includes(element.attributeName)) {\r\n                    tableContentFiltered.push(element);\r\n                }\r\n            });\r\n\r\n            this.tb2data = tableContentFiltered;\r\n        }\r\n        else {\r\n            this.populateTb2();\r\n        }\r\n    }\r\n\r\n    saveNewScore(modalNewScore) {\r\n        this.newScoreForm = new FormGroup({\r\n            controlNewScoreCategories: new FormControl(),\r\n            controlNewScoreTypes: new FormControl(),\r\n            controlNewScoreAttributes: new FormControl(),\r\n            controlNewScoreValue: new FormControl()\r\n        });\r\n\r\n        this.attributeCategoryService.getAll().subscribe(response => {\r\n            this.newScoreAttributeCategories = response;\r\n        });\r\n\r\n        const dialogRef = this.dialog.open(modalNewScore, {\r\n            width: '880px',\r\n        });\r\n    }\r\n\r\n    filterSelectedCategoryNewScore(event) {\r\n        this.newScoreAttributeTypes = [];\r\n        this.newScoreAttributes = [];\r\n        this.newScoreValues = [];\r\n        this.attributeTypeService.getByAttributeCategoryId(event.value.id).subscribe(response => {\r\n            this.newScoreAttributeTypes = response;\r\n        });\r\n    }\r\n\r\n    filterSelectedTypeNewScore(event) {\r\n        this.newScoreAttributes = [];\r\n        this.newScoreValues = [];\r\n        this.attributeService.getByAttributeTypeId(event.value.id).subscribe(response => {\r\n            this.newScoreAttributes = response;\r\n        });\r\n    }\r\n\r\n\r\n    filterSelectedAttributeNewScore(event) {\r\n        const scoreHelper = event.value.scoreHelper.split(\";\");\r\n        const allowedScores = event.value.allowedScores.split(\";\");\r\n\r\n        const newScoreValuesMapped = [];\r\n\r\n        allowedScores.forEach((allowedScoresValue, index) => {\r\n            const scoreHelperValue = scoreHelper[index];\r\n\r\n            newScoreValuesMapped.push({\r\n                score: allowedScoresValue,\r\n                description: scoreHelperValue\r\n            });\r\n        });\r\n\r\n        this.newScoreValues = newScoreValuesMapped;\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.newScoreForm.valid && this.newScoreForm.value != null) {\r\n            const payload = {\r\n                employeeId: this.employeelId,\r\n                attributeId: this.newScoreForm.value.controlNewScoreAttributes.id,\r\n                score: parseInt(this.newScoreForm.value.controlNewScoreValue.score, 10),\r\n            };\r\n\r\n            this.employeeAttributeService.postSaveEmployeeAttribute(payload).subscribe(response => {\r\n                this.notifier.notify('success', 'Score successfully saved!');\r\n                this.populateTb2();\r\n            },\r\n            (err) => {\r\n              this.notifier.notify('error', `There was an error while saving the new score.`);\r\n            });\r\n\r\n            this.dialog.closeAll();\r\n        }\r\n    }\r\n\r\n    // getattributeTypeList() {\r\n    //     this.attributeTypeService.getAll().subscribe(\r\n    //         response => {\r\n    //             this.attributeTypeList = response;\r\n    //             // console.log(response);\r\n    //         },\r\n    //         error => {\r\n    //             console.log(error);\r\n    //         }\r\n    //     );\r\n    // }\r\n\r\n    // getattributeCategoryList() {\r\n    //     this.attributeCategoryService.getAll().subscribe(\r\n    //         response => {\r\n    //             this.attributeCategoryList = response;\r\n    //             // console.log(response);\r\n    //         },\r\n    //         error => {\r\n    //             console.log(error);\r\n    //         }\r\n    //     );\r\n    // }\r\n\r\n    getAllAttributes() {\r\n        this.attributeService.getAll().subscribe(\r\n            response => {\r\n                this.attributes = response;\r\n                this.populateTb2();\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    refresh() {\r\n    }\r\n\r\n    populateTb2() {\r\n        this.tableContent = [];\r\n        this.listaEmployeeAttributeDiff = [];\r\n\r\n        this.listaEmployeeAttribute.forEach(element => {\r\n            this.attributes.forEach(attribute => {\r\n                if (attribute.id === element.attributeId) {\r\n                    this.listaEmployeeAttributeDiff.push(attribute.description);\r\n                    this.tableContent.push({\r\n                        attributeId: element.attributeId,\r\n                        attributeName: attribute.description,\r\n                        createdAt: element.createdAt,\r\n                        employeeId: element.employeeId,\r\n                        id: element.id,\r\n                        score: element.score\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        this.listaEmployeeAttributeDiff = this.listaEmployeeAttributeDiff.filter((item, pos) => {\r\n            return this.listaEmployeeAttributeDiff.indexOf(item) === pos;\r\n        });\r\n\r\n        this.tb2data = this.tableContent;\r\n    }\r\n\r\n    tb2fetch(cb) {\r\n        const req = new XMLHttpRequest();\r\n        req.open('GET', 'assets/data/ngx-data.json');\r\n        req.onload = () => {\r\n            const data = JSON.parse(req.response);\r\n            cb(data);\r\n        };\r\n        req.send();\r\n    }\r\n\r\n    tb2filterDatatable(event) {\r\n        // get the value of the key pressed and make it lowercase\r\n        const val = event.target.value.toLowerCase();\r\n        // get the amount of columns in the table\r\n        const colsAmt = this.tb2columns.length;\r\n        // get the key names of each column in the dataset\r\n        const keys = Object.keys(this.tb2filteredData[0]);\r\n        // assign filtered matches to the active datatable\r\n        // this.tb2data = this.tb2filteredData.filter(function (item) {\r\n        //     // iterate through each row's column data\r\n        //     for (let i = 0; i < colsAmt; i++) {\r\n        //         // check for a match\r\n        //         if (\r\n        //             item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\r\n        //             !val\r\n        //         ) {\r\n        //             // found match, return true to add to result set\r\n        //             return true;\r\n        //         }\r\n        //     }\r\n        // });\r\n\r\n        // whenever the filter changes, always go back to the first page\r\n        this.table2.offset = 0;\r\n    }\r\n\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Colaboradores</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\"\r\n                 onClick=\"return false;\"\r\n                 [routerLink]=\"['/employee']\">Colaboradores</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Detalhes</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"tabbable-line\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n              <div class=\"card\">\r\n                <div class=\"body\">\r\n                  <div class=\"row\">\r\n                    <div>\r\n                      <div class=\"card border-apply\">\r\n                        <div class=\"m-b-20\">\r\n                          <div class=\"contact-grid\">\r\n                            <div class=\"profile-header bg-dark header-employee\">\r\n                            </div>\r\n                            <img src=\"{{ employeeDisplay.photoUrl }}\"\r\n                                 class=\"user-img imagem-employee\"\r\n                                 alt=\"\">\r\n                            <div class=\"dados-apresentacao\">\r\n                              <p class=\"dados-apresentacao-nome\">\r\n                                {{ employeeDisplay.firstName }}\r\n                              </p>\r\n                              <p class=\"dados-apresentacao-titulo\">\r\n                                {{ employeeDisplay.role }}\r\n                              </p>\r\n                              <p class=\"dados-apresentacao-titulo\">\r\n                                {{ employeeDisplay.email }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"card border-apply\">\r\n                        <mat-tab-group>\r\n                          <mat-tab label=\"Atributos\">\r\n                            <div class=\"tab-content\">\r\n                              <div class=\"card conteudo-detalhes-employee\">\r\n\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-lg-5 col-md-5 col-sm-5 col-xs-5\">\r\n                                    <div class=\"card conteudo-detalhes-employee\">\r\n\r\n                                      <mat-form-field>\r\n                                        <mat-label>Attributes</mat-label>\r\n                                        <mat-select [formControl]=\"attributeCategories\"\r\n                                                    (selectionChange)=\"filterSelect($event)\"\r\n                                                    multiple>\r\n                                          <mat-option *ngFor=\"let attribute of listaEmployeeAttributeDiff\"\r\n                                                      [value]=\"attribute\">{{ attribute }}\r\n                                          </mat-option>\r\n                                        </mat-select>\r\n                                      </mat-form-field>\r\n\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-lg-2 col-md-2 col-sm-2 col-xs-2\">\r\n                                    <div class=\"card add conteudo-detalhes-employee\">\r\n\r\n                                      <button mat-mini-fab\r\n                                              color=\"success\"\r\n                                              class=\"add\"\r\n                                              (click)=\"saveNewScore(modalNewScore)\">\r\n                                        <mat-icon class=\"col-white\">add\r\n                                        </mat-icon>\r\n\r\n                                      </button>\r\n\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div class=\"card conteudo-detalhes-employee\">\r\n\r\n                                      <ngx-datatable #table2\r\n                                                     class=\"material\"\r\n                                                     [rows]=\"tb2data\"\r\n                                                     [columns]=\"tb2columns\"\r\n                                                     [sortType]=\"'multi'\"\r\n                                                     [columnMode]=\"'force'\"\r\n                                                     [headerHeight]=\"50\"\r\n                                                     [footerHeight]=\"50\"\r\n                                                     [rowHeight]=\"'auto'\"\r\n                                                     [limit]=\"10\">\r\n                                      </ngx-datatable>\r\n\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                              </div>\r\n                            </div>\r\n                          </mat-tab>\r\n                          <mat-tab label=\"Conteúdo 2\">\r\n                            <div class=\"tab-content\">\r\n                              <div class=\"card conteudo-detalhes-employee\">\r\n                                <div class=\"body\">\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                      <h5>Gráfico 1</h5>\r\n                                      <div echarts\r\n                                           [options]=\"pieChart\"\r\n                                           class=\"echart-height\"></div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                      <h5>Gráfico 2</h5>\r\n                                      <div echarts\r\n                                           [options]=\"pieChart\"\r\n                                           class=\"echart-height\"></div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                              </div>\r\n\r\n\r\n                            </div>\r\n                          </mat-tab>\r\n                        </mat-tab-group>\r\n                      </div>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<ng-template #modalNewScore>\r\n  <div mat-dialog-title>\r\n    <h5>New Score</h5>\r\n  </div>\r\n\r\n  <div mat-dialog-content>\r\n    <form class=\"\"\r\n          [formGroup]=\"newScoreForm\"\r\n          id=\"newScoreForm\"\r\n          (ngSubmit)=\"onSubmit()\">\r\n\r\n      <div class=\"form-group\">\r\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"width-filter\">\r\n            <mat-label>Categories</mat-label>\r\n            <mat-select formControlName=\"controlNewScoreCategories\"\r\n                        (selectionChange)=\"filterSelectedCategoryNewScore($event)\"\r\n                        required>\r\n              <mat-option *ngFor=\"let attributeCategory of newScoreAttributeCategories\"\r\n                          [value]=\"attributeCategory\">\r\n                {{ attributeCategory.description }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"width-filter\">\r\n            <mat-label>Types</mat-label>\r\n            <mat-select formControlName=\"controlNewScoreTypes\"\r\n                        (selectionChange)=\"filterSelectedTypeNewScore($event)\"\r\n                        required>\r\n              <mat-option *ngFor=\"let attributeType of newScoreAttributeTypes\"\r\n                          [value]=\"attributeType\">\r\n                {{ attributeType.description }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"form-group\">\r\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"width-filter\">\r\n            <mat-label>Attributes</mat-label>\r\n            <mat-select formControlName=\"controlNewScoreAttributes\"\r\n                        (selectionChange)=\"filterSelectedAttributeNewScore($event)\"\r\n                        required>\r\n              <mat-option *ngFor=\"let attribute of newScoreAttributes\"\r\n                          [value]=\"attribute\">\r\n                {{ attribute.description }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"width-filter\">\r\n            <mat-label>Score</mat-label>\r\n            <mat-select formControlName=\"controlNewScoreValue\"\r\n                        required>\r\n              <mat-option *ngFor=\"let value of newScoreValues\"\r\n                          [value]=\"value\">\r\n                {{ value.description }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"form-group\">\r\n        <div class=\"col-md-12\">\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"width-filter\">\r\n            <mat-label>Score</mat-label>\r\n            <input type=\"number\"\r\n                   matInput\r\n                   min=\"1\"\r\n                   max=\"10\"\r\n                   name=\"score\"\r\n                   id=\"score\"\r\n                   formControlName=\"newScoreValue\"\r\n                   required>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n -->\r\n    </form>\r\n  </div>\r\n\r\n  <div mat-dialog-actions\r\n       class=\"position-actions\">\r\n    <button mat-raised-button\r\n            class=\"mat-button-cancel\"\r\n            [mat-dialog-close]=\"false\">Cancel</button>\r\n\r\n    <button mat-raised-button\r\n            class=\"mat-button-confirm\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            form=\"newScoreForm\"\r\n            cdkFocusInitial>Save</button>\r\n  </div>\r\n\r\n</ng-template>","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { EmployeeDetalhesComponent } from \"./employee-detalhes/employee-detalhes.component\";\r\nimport { EmployeeComponent } from \"./employee.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmployeeComponent\r\n  },\r\n  {\r\n    path: 'detalhes/:id',\r\n    component: EmployeeDetalhesComponent\r\n  }\r\n];\r\n  \r\n  @NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class EmployeeRoutingModule {}\r\n  ","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UnsubscribeOnDestroyAdapter } from '../../shared/UnsubscribeOnDestroyAdapter';\r\nimport { Contacts } from '../contacts/contacts.model';\r\nimport { EmployeeFormComponent } from './form/form.component';\r\nimport { EmployeeDeleteComponent } from './delete/delete.component';\r\nimport { ContactsService } from '../contacts/contacts.service';\r\nimport { Employee } from 'src/app/core/models/employee.model';\r\nimport { EmployeeService } from 'src/app/core/service/employee.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.scss']\r\n})\r\n\r\nexport class EmployeeComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  filterToggle = false;\r\n  displayedColumns = [\r\n    'select',\r\n    'id',\r\n    'firstName',\r\n    'email',\r\n    'actions'\r\n  ];\r\n  // exampleDatabase: ContactsService | null;\r\n  // dataSource: ExampleDataSource | null;\r\n  dataSource = new MatTableDataSource<any>();\r\n  selection = new SelectionModel<Employee>(true, []);\r\n  id: number;\r\n  //contacts: Contacts | null;\r\n  employees: Employee[] = [];\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public contactsService: ContactsService,\r\n    public employeeService: EmployeeService,\r\n    private snackBar: MatSnackBar,\r\n    private route: Router\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n\r\n  getEmployers() {\r\n    this.dataSource.data = [];\r\n\r\n    this.employeeService.getAll().subscribe(colaboradores => {\r\n      this.employees = colaboradores;\r\n      this.dataSource.data = this.employees;\r\n      // console.log(\"dataSource.data: \", this.dataSource.data);\r\n      // console.log(\"dataSource: \", this.dataSource);\r\n    });\r\n\r\n  }\r\n\r\n  onClickRoute(event){\r\n    // console.log(\"event: \", event)\r\n    this.route.navigate([`/employee/detalhes/` + event.id]);\r\n  }\r\n\r\n  addNew() {\r\n    // let tempDirection;\r\n    // if (localStorage.getItem('isRtl') === 'true') {\r\n    //   tempDirection = 'rtl';\r\n    // } else {\r\n    //   tempDirection = 'ltr';\r\n    // }\r\n    // const dialogRef = this.dialog.open(EmployeeFormComponent, {\r\n    //   data: {\r\n    //     contacts: this.contacts,\r\n    //     action: 'add'\r\n    //   },\r\n    //   direction: tempDirection\r\n    // });\r\n    // this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n    //   if (result === 1) {\r\n    //     // After dialog is closed we're doing frontend updates\r\n    //     // For add we're just pushing a new row inside DataServicex\r\n    //     this.exampleDatabase.dataChange.value.unshift(\r\n    //       this.contactsService.getDialogData()\r\n    //     );\r\n    //     this.refreshTable();\r\n    //     this.showNotification(\r\n    //       'snackbar-success',\r\n    //       'Add Record Successfully...!!!',\r\n    //       'bottom',\r\n    //       'center'\r\n    //     );\r\n    //   }\r\n    // });\r\n  }\r\n  detailsCall(row) {\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    this.dialog.open(EmployeeFormComponent, {\r\n      data: {\r\n        contacts: row,\r\n        action: 'details'\r\n      },\r\n      direction: tempDirection,\r\n      height: '70%',\r\n      width: '35%'\r\n    });\r\n  }\r\n  toggleStar(row) {\r\n    // console.log(row);\r\n  }\r\n  editCall(row) {\r\n    // this.id = row.id;\r\n    // let tempDirection;\r\n    // if (localStorage.getItem('isRtl') === 'true') {\r\n    //   tempDirection = 'rtl';\r\n    // } else {\r\n    //   tempDirection = 'ltr';\r\n    // }\r\n    // const dialogRef = this.dialog.open(EmployeeFormComponent, {\r\n    //   data: {\r\n    //     contacts: row,\r\n    //     action: 'edit'\r\n    //   },\r\n    //   direction: tempDirection\r\n    // });\r\n    // this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n    //   if (result === 1) {\r\n    //     // When using an edit things are little different, firstly we find record inside DataService by id\r\n    //     const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n    //       (x) => x.id === this.id\r\n    //     );\r\n    //     // Then you update that record using data from dialogData (values you enetered)\r\n    //     this.exampleDatabase.dataChange.value[foundIndex] =\r\n    //       this.contactsService.getDialogData();\r\n    //     // And lastly refresh table\r\n    //     this.refreshTable();\r\n    //     this.showNotification(\r\n    //       'black',\r\n    //       'Edit Record Successfully...!!!',\r\n    //       'bottom',\r\n    //       'center'\r\n    //     );\r\n    //   }\r\n    // });\r\n  }\r\n  deleteItem(row) {\r\n    // this.id = row.id;\r\n    // let tempDirection;\r\n    // if (localStorage.getItem('isRtl') === 'true') {\r\n    //   tempDirection = 'rtl';\r\n    // } else {\r\n    //   tempDirection = 'ltr';\r\n    // }\r\n    // const dialogRef = this.dialog.open(EmployeeDeleteComponent, {\r\n    //   data: row,\r\n    //   direction: tempDirection\r\n    // });\r\n    // this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n    //   if (result === 1) {\r\n    //     const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n    //       (x) => x.id === this.id\r\n    //     );\r\n    //     // for delete we use splice in order to remove single object from DataService\r\n    //     this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n    //     this.refreshTable();\r\n    //     this.showNotification(\r\n    //       'snackbar-danger',\r\n    //       'Delete Record Successfully...!!!',\r\n    //       'bottom',\r\n    //       'center'\r\n    //     );\r\n    //   }\r\n    // });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  \r\n  removeSelectedRows() {\r\n    // const totalSelect = this.selection.selected.length;\r\n    // this.selection.selected.forEach((item) => {\r\n    //   const index: number = this.dataSource.data.findIndex(\r\n    //     (d) => d === item\r\n    //   );\r\n    //   // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n    //   this.exampleDatabase.dataChange.value.splice(index, 1);\r\n    //   this.refreshTable();\r\n    //   this.selection = new SelectionModel<Employee>(true, []);\r\n    // });\r\n    // this.showNotification(\r\n    //   'snackbar-danger',\r\n    //   totalSelect + ' Record Delete Successfully...!!!',\r\n    //   'bottom',\r\n    //   'center'\r\n    // );\r\n  }\r\n  public loadData() {\r\n    this.getEmployers();\r\n\r\n    // console.log(\"datasource: \", this.dataSource);\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup')\r\n      // .debounceTime(150)\r\n      // .distinctUntilChanged()\r\n      .subscribe(() => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName\r\n    });\r\n  }\r\n}\r\n\r\n// export class ExampleDataSource extends DataSource<Contacts> {\r\n//   filterChange = new BehaviorSubject('');\r\n//   get filter(): string {\r\n//     return this.filterChange.value;\r\n//   }\r\n//   set filter(filter: string) {\r\n//     this.filterChange.next(filter);\r\n//   }\r\n//   filteredData: Employee[] = [];\r\n//   renderedData: Employee[] = [];\r\n//   constructor(\r\n//     public exampleDatabase: EmployeeService,\r\n//     public paginator: MatPaginator,\r\n//     public _sort: MatSort\r\n//   ) {\r\n//     super();\r\n//     // Reset to the first page when the user changes the filter.\r\n//     this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n//   }\r\n//   /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n//   connect(): Observable<Employee[]> {\r\n//     // Listen for any changes in the base data, sorting, filtering, or pagination\r\n//     const displayDataChanges = [\r\n//       //this.exampleDatabase.dataChange,\r\n//       this._sort.sortChange,\r\n//       this.filterChange,\r\n//       this.paginator.page\r\n//     ];\r\n//     this.exampleDatabase.getAll();\r\n//     return merge(...displayDataChanges).pipe(\r\n//       map(() => {\r\n//         // Filter data\r\n//         this.filteredData = this.exampleDatabase.getAll\r\n//           .slice()\r\n//           .filter((contacts: Contacts) => {\r\n//             const searchStr = (\r\n//               contacts.name +\r\n//               contacts.birthDate +\r\n//               contacts.email +\r\n//               contacts.mobile +\r\n//               contacts.address\r\n//             ).toLowerCase();\r\n//             return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n//           });\r\n//         // Sort filtered data\r\n//         const sortedData = this.sortData(this.filteredData.slice());\r\n//         // Grab the page's slice of the filtered sorted data.\r\n//         const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n//         this.renderedData = sortedData.splice(\r\n//           startIndex,\r\n//           this.paginator.pageSize\r\n//         );\r\n//         return this.renderedData;\r\n//       })\r\n//     );\r\n//   }\r\n//   disconnect() {}\r\n//   /** Returns a sorted copy of the database data. */\r\n//   sortData(data: Contacts[]): Contacts[] {\r\n//     if (!this._sort.active || this._sort.direction === '') {\r\n//       return data;\r\n//     }\r\n//     return data.sort((a, b) => {\r\n//       let propertyA: number | string = '';\r\n//       let propertyB: number | string = '';\r\n//       switch (this._sort.active) {\r\n//         case 'id':\r\n//           [propertyA, propertyB] = [a.id, b.id];\r\n//           break;\r\n//         case 'name':\r\n//           [propertyA, propertyB] = [a.name, b.name];\r\n//           break;\r\n//         case 'email':\r\n//           [propertyA, propertyB] = [a.email, b.email];\r\n//           break;\r\n//         case 'birthDate':\r\n//           [propertyA, propertyB] = [a.birthDate, b.birthDate];\r\n//           break;\r\n//         case 'address':\r\n//           [propertyA, propertyB] = [a.address, b.address];\r\n//           break;\r\n//       }\r\n//       const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n//       const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n//       return (\r\n//         (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n//       );\r\n//     });\r\n//   }\r\n// }","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Colaboradores</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Colaboradores</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"tabbable-line\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n              <div class=\"card\">\r\n                <div class=\"body\">\r\n                  <div class=\"table-responsive\">\r\n                    <div class=\"materialTableHeader\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-8\">\r\n                          <ul class=\"header-buttons-left ml-0\">\r\n                            <li class=\"dropdown\">\r\n                              <h2>\r\n                                <strong>Colaboradores</strong>\r\n                              </h2>\r\n                            </li>\r\n                            <li class=\"dropdown m-l-20\">\r\n                              <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                              <input placeholder=\"Search\"\r\n                                     type=\"text\"\r\n                                     #filter\r\n                                     class=\"browser-default search-field\"\r\n                                     aria-label=\"Search box\">\r\n                            </li>\r\n                            <!-- <li>\r\n                              <div class=\"icon-button-demo m-l-10\"\r\n                                   [hidden]=!selection.hasValue()>\r\n                                <button mat-mini-fab\r\n                                        color=\"warn\"\r\n                                        (click)=\"removeSelectedRows()\">\r\n                                  <mat-icon class=\"col-white\">delete\r\n                                  </mat-icon>\r\n                                </button>\r\n                              </div>\r\n                            </li> -->\r\n                          </ul>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                          <ul class=\"header-buttons\">\r\n                            <!-- <li>\r\n                              <div class=\"icon-button-demo\">\r\n                                <button mat-mini-fab\r\n                                        color=\"primary\"\r\n                                        (click)=\"addNew()\">\r\n                                  <mat-icon class=\"col-white\">add</mat-icon>\r\n                                </button>\r\n                              </div>\r\n                            </li> -->\r\n                            <li>\r\n                              <div class=\"icon-button-demo\">\r\n                                <button mat-mini-fab\r\n                                        color=\"primary\"\r\n                                        (click)=\"refresh()\">\r\n                                  <mat-icon class=\"col-white\">refresh\r\n                                  </mat-icon>\r\n                                </button>\r\n                              </div>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <mat-table #table\r\n                               [dataSource]=\"dataSource\"\r\n                               matSort\r\n                               class=\"mat-cell\">\r\n                      <!-- Checkbox Column -->\r\n                      <ng-container matColumnDef=\"select\">\r\n                        <mat-header-cell *matHeaderCellDef\r\n                                         [ngClass]=\"'tbl-col-width-per-6'\">\r\n                          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                        [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                        [ngClass]=\"'tbl-checkbox'\">\r\n                          </mat-checkbox>\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\"\r\n                                  [ngClass]=\"'tbl-col-width-per-6'\">\r\n                          <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                        (change)=\"$event ? selection.toggle(row) : null\"\r\n                                        [checked]=\"selection.isSelected(row)\"\r\n                                        [ngClass]=\"'tbl-checkbox'\">\r\n                          </mat-checkbox>\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <!-- ID Column -->\r\n                      <ng-container matColumnDef=\"id\">\r\n                        <mat-header-cell *matHeaderCellDef\r\n                                         mat-sort-header>Id\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                      </ng-container>\r\n                      <!-- <ng-container matColumnDef=\"img\">\r\n                        <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\"> Image\r\n                        </mat-header-cell>\r\n                        <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-6\"> <img\r\n                            [src]=\"row.img\" />\r\n                        </mat-cell>\r\n                      </ng-container> -->\r\n                      <ng-container matColumnDef=\"firstName\">\r\n                        <mat-header-cell *matHeaderCellDef\r\n                                         mat-sort-header>Nome\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\"> {{row.firstName}}\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"email\">\r\n                        <mat-header-cell *matHeaderCellDef\r\n                                         mat-sort-header>Email\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\"> {{row.email}}\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <!-- <ng-container matColumnDef=\"mobile\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\"> {{row.mobile}}\r\n                        </mat-cell>\r\n                      </ng-container> -->\r\n                      <!-- <ng-container matColumnDef=\"email\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Email\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\"> {{row.email}}\r\n                        </mat-cell>\r\n                      </ng-container> -->\r\n                      <!-- <ng-container matColumnDef=\"birthDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Birth Date\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                          {{row.birthDate | date: 'MM/dd/yyyy'}}</mat-cell>\r\n                      </ng-container> -->\r\n                      <!-- <ng-container matColumnDef=\"address\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Address\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap\"> {{row.address}}\r\n                        </mat-cell>\r\n                      </ng-container> -->\r\n                      <!-- <ng-container matColumnDef=\"note\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Note\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\"> {{row.note}}\r\n                        </mat-cell>\r\n                      </ng-container> -->\r\n                      <!-- actions -->\r\n                      <ng-container matColumnDef=\"actions\">\r\n                        <mat-header-cell class=\"psl-3 tbl-col-width-per-10\"\r\n                                         *matHeaderCellDef>Informações\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row; let i=index;\"\r\n                                  class=\"psl-3 tbl-col-width-per-10\">\r\n                          <button mat-mini-fab\r\n                                  color=\"primary\" (click)=\"onClickRoute(row)\">\r\n                            <mat-icon class=\"col-white\">info_outline\r\n                            </mat-icon>\r\n                          </button>\r\n\r\n                        </mat-cell>\r\n                      </ng-container>\r\n\r\n                      <mat-header-row *matHeaderRowDef=\"displayedColumns\">\r\n                      </mat-header-row>\r\n                      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"\r\n                               [style.cursor]=\"'pointer'\"\r\n                               matRipple>\r\n                      </mat-row>\r\n                    </mat-table>\r\n                    <!-- Loading spinner -->\r\n                    <!-- <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                      <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                      </mat-progress-spinner>\r\n                    </div> -->\r\n                    <div class=\"empty\"\r\n                         [style.display]=\"dataSource.data.length == 0 ? '' : 'none'\">\r\n                      Não existem dados para serem exibidos\r\n                    </div>\r\n                    <mat-paginator #paginator\r\n                                   [length]=\"dataSource.data.length\"\r\n                                   [pageIndex]=\"0\"\r\n                                   [pageSize]=\"10\"\r\n                                   [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n                    </mat-paginator>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>","import { NgModule } from \"@angular/core\";\r\nimport { OwlDateTimeIntl } from \"ng-pick-datetime\";\r\nimport { ComponentModule } from \"src/app/shared/components/component.module\";\r\nimport { SnackbarComponent } from \"../ui/snackbar/snackbar.component\";\r\nimport { EmployeeRoutingModule } from \"./employee-routing.module\";\r\nimport { EmployeeComponent } from \"./employee.component\";\r\nimport { EmployeeFormComponent } from './form/form.component';\r\nimport { EmployeeDeleteComponent } from './delete/delete.component';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\r\nimport { AdvanceTableRoutingModule } from \"../advance-table/advance-table-routing.module\";\r\nimport { ContactsService } from \"../contacts/contacts.service\";\r\nimport { EmployeeDetalhesComponent } from \"./employee-detalhes/employee-detalhes.component\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { NgxEchartsModule } from \"ngx-echarts\";\r\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    EmployeeRoutingModule,\r\n    ComponentModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AdvanceTableRoutingModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MaterialFileInputModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    NgxDatatableModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts')\r\n    }),\r\n\r\n  ],\r\n  declarations: [\r\n    EmployeeComponent,\r\n    EmployeeFormComponent,\r\n    EmployeeDeleteComponent,\r\n    EmployeeDetalhesComponent\r\n  ],\r\n  providers: [\r\n    SnackbarComponent,\r\n    { provide: OwlDateTimeIntl },\r\n    ContactsService\r\n  ],\r\n})\r\nexport class EmployeeModule { }\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { formatDate } from '@angular/common';\r\nimport { Contacts } from '../../contacts/contacts.model';\r\nimport { ContactsService } from '../../contacts/contacts.service';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.sass']\r\n})\r\nexport class EmployeeFormComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  isDetails = false;\r\n  contactsForm: FormGroup;\r\n  contacts: Contacts;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EmployeeFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public contactsService: ContactsService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.isDetails = false;\r\n      this.dialogTitle = data.contacts.name;\r\n      this.contacts = data.contacts;\r\n      this.contactsForm = this.createContactForm();\r\n    } else if (this.action === 'details') {\r\n      this.contacts = data.contacts;\r\n      this.isDetails = true;\r\n    } else {\r\n      this.isDetails = false;\r\n      this.dialogTitle = 'New Contacts';\r\n      this.contacts = new Contacts({});\r\n      this.contactsForm = this.createContactForm();\r\n    }\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.contacts.id],\r\n      img: [this.contacts.img],\r\n      name: [this.contacts.name],\r\n      email: [\r\n        this.contacts.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      birthDate: [\r\n        formatDate(this.contacts.birthDate, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      address: [this.contacts.address],\r\n      mobile: [this.contacts.mobile],\r\n      note: [this.contacts.note]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.contactsService.addContacts(this.contactsForm.getRawValue());\r\n  }\r\n}\r\n\r\n","<div class=\"addContainer\">\r\n    <div *ngIf=\"!isDetails\" class=\"contact-form\">\r\n      <div class=\"modalHeader\">\r\n        <div class=\"editRowModal\">\r\n          <div class=\"modalHeader clearfix\">\r\n            <img [src]='contacts.img' alt=\"avatar\">\r\n            <div class=\"modal-about\">\r\n              <div class=\"font-weight-bold p-t-5 font-17\">\r\n                {{dialogTitle}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </div>\r\n      <div mat-dialog-content>\r\n        <form class=\"register-form m-4\" [formGroup]=\"contactsForm\" (ngSubmit)=\"submit\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                <mat-label>Name</mat-label>\r\n                <input matInput formControlName=\"name\" required>\r\n                <i class=\"material-icons-two-tone color-icon\" matSuffix>face</i>\r\n                <mat-error *ngIf=\"contactsForm.get('name').hasError('required')\">\r\n                  Name is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                <mat-label>Email</mat-label>\r\n                <input matInput formControlName=\"email\" required>\r\n                <i class=\"material-icons-two-tone color-icon\" matSuffix>email</i>\r\n                <mat-error *ngIf=\"contactsForm.get('email').hasError('required') || contactsForm.get('email').touched\">\r\n                  Please enter a valid email address\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                <mat-label>Mobile</mat-label>\r\n                <input matInput formControlName=\"mobile\" type=\"number\">\r\n                <i class=\"material-icons-two-tone color-icon\" matSuffix>smartphone</i>\r\n                <mat-error *ngIf=\"contactsForm.get('mobile').hasError('required')\">\r\n                  Mobile is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                <mat-label>Birth date</mat-label>\r\n                <input matInput [matDatepicker]=\"picker\" formControlName=\"birthDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #picker></mat-datepicker>\r\n                <mat-error *ngIf=\"contactsForm.get('birthDate').hasError('required')\">\r\n                  Please select date\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                <mat-label>Address</mat-label>\r\n                <textarea matInput formControlName=\"address\"></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                <mat-label>Note</mat-label>\r\n                <textarea matInput formControlName=\"note\"></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n              <div class=\"example-button-row\">\r\n                <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!contactsForm.valid\"\r\n                  [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n                <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"isDetails\" class=\"contact-details\">\r\n      <div class=\"modalHeader\">\r\n        <div class=\"editRowModal\">\r\n          <div class=\"modalHeader clearfix\">\r\n            <div class=\"modal-about contact-header\">\r\n              <div class=\"contact-details-img\">\r\n                <img [src]='contacts.img' alt=\"avatar\">\r\n              </div>\r\n              <div class=\"contact-details-heading\">\r\n                <div class=\"contact-details-name mb-2\">{{contacts.name}}</div>\r\n                <div class=\"badge col-green\">Friends</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </div>\r\n      <div mat-dialog-content>\r\n        <mat-card-content>\r\n          <div class=\"contact-details-field\">\r\n            <i class=\"material-icons-two-tone color-icon\">email</i>\r\n            <div class=\"contact-detail-info\"> {{contacts.email}}\r\n            </div>\r\n          </div>\r\n          <div class=\"contact-details-field\">\r\n            <i class=\"material-icons-two-tone color-icon\">phonelink_ring</i>\r\n            <div class=\"contact-detail-info\"> {{contacts.mobile}}\r\n            </div>\r\n          </div>\r\n          <div class=\"contact-details-field\">\r\n            <i class=\"material-icons-two-tone color-icon\">cake</i>\r\n            <div class=\"contact-detail-info\"> {{contacts.birthDate | date: 'MMMM d, yyyy'}}\r\n            </div>\r\n          </div>\r\n          <div class=\"contact-details-field\">\r\n            <i class=\"material-icons-two-tone color-icon\">location_on</i>\r\n            <div class=\"contact-detail-info\"> {{contacts.address}}\r\n            </div>\r\n          </div>\r\n          <div class=\"contact-details-field\">\r\n            <i class=\"material-icons-two-tone color-icon\">note</i>\r\n            <div class=\"contact-detail-info\"> {{contacts.note}}\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </div>\r\n    </div>\r\n  </div>\r\n"],"sourceRoot":"webpack:///"}