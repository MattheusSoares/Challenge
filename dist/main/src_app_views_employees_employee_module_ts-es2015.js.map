{"version":3,"sources":["./src/app/core/service/Employee.service.ts","./src/app/shared/components/component.module.ts","./src/app/shared/components/custom-table/custom-table.component.ts","./src/app/shared/components/custom-table/custom-table.component.html","./src/app/views/employees/employee-routing.module.ts","./src/app/views/employees/employee.component.ts","./src/app/views/employees/employee.component.html","./src/app/views/employees/employee.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAQO,MAAM,eAAe;IAI1B,YACgC,OAAe,EACrC,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACxB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,MAAM;QACF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,IAAI,CAAC,OAAO,WAAW,CAAC,CAAC;IAC/D,CAAC;;8EAbU,eAAe,yDAKhB,oBAAoB;gHALnB,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNyC;AAEK;AACP;AACA;AACO;AACX;AACE;AACF;AAC4B;AAEL;AACR;AACf;AACE;AACF;AACsB;;AAyBtE,MAAM,eAAe;;8EAAf,eAAe;4GAAf,eAAe;iHAJb;QACP,EAAE,OAAO,EAAE,yEAAgB,EAAE;KAChC,YAnBQ;YACL,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,mEAAc;YACd,2EAAkB;YAClB,4EAAkB;YAClB,mEAAc;YACd,qEAAe;YACf,iEAAa;YACb,kEAAa;YACb,kEAAa;YACb,kEAAa;YACb,sEAAe;YACf,iFAAoB;YACpB,yFAAwB;SAC3B;mIAKQ,eAAe,mBAvBT,sFAAoB,aAG/B,yDAAY;QACZ,uDAAW;QACX,+DAAmB;QACnB,mEAAc;QACd,2EAAkB;QAClB,4EAAkB;QAClB,mEAAc;QACd,qEAAe;QACf,iEAAa;QACb,kEAAa;QACb,kEAAa;QACb,kEAAa;QACb,sEAAe;QACf,iFAAoB;QACpB,yFAAwB,aAhBlB,sFAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBoE;AAEzB;AAC5B;AAEhB;AAC+C;AACC;;;;;;;;;;;;;ICSnE,6EAA2E;IAAtC,yTAAe;IAClD,+EAA4B;IAAA,8DAAG;IAAA,4DAAW;IAC5C,4DAAS;;;IAUf,sFAAmE;IACjE,uDAAiB;IAAA,4DAAkB;;;IAAnC,0DAAiB;IAAjB,0FAAiB;;;IAEjB,wEAA2C;IACzC,uDACF;;IAAA,qEAAe;;;;IADb,0DACF;IADE,6LACF;;;IACA,wEAAkG;IAChG,uDACF;IAAA,qEAAe;;;;IADb,0DACF;IADE,wGACF;;;IACA,wEAA+C;IAC7C,uDACF;;IAAA,qEAAe;;;;IADb,0DACF;IADE,gLACF;;;IACA,wEAA4C;IAC1C,iEAA8G;IAChH,qEAAe;;;;IADR,0DAAkG;IAAlG,4KAAkG;;;IAX3G,+EAAyC;IACvC,6KAEe;IACf,6KAEe;IACf,6KAEe;IACf,6KAEe;IACjB,4DAAW;;;IAZM,0DAA0B;IAA1B,4FAA0B;IAG1B,0DAAiF;IAAjF,6JAAiF;IAGjF,0DAA8B;IAA9B,gGAA8B;IAG9B,0DAA2B;IAA3B,6FAA2B;;;IAb9C,4EAA8E;IAC5E,wKACqC;IACrC,0JAaW;IACb,qEAAe;;;IAjB8B,6FAAgC;;;IAD/E,wEAA6C;IAC3C,mJAiBe;IACjB,qEAAe;;;IAlBE,0DAA4B;IAA5B,4FAA4B;;;IAqB7C,4EAAqE;;;;IACzD,8EACuC;IADmB,kYAAuB;IAE7F,4DAAU;;IADI,8EAA0B;;;IAe1C,0EAA8E;IAC5E,uGACF;IAAA,4DAAM;;;IAGN,0EAA8C;IAC5C,sFACuB;IACzB,4DAAM;;IAFkC,0DAAe;IAAf,wEAAe;;;IAIvD,0EAAqH;IACnH,uEACF;IAAA,4DAAM;;;IAF2C,8HAAmE;;ADpD/G,MAAM,oBAAqB,SAAQ,qFAA2B;IAiBnE,YAAmB,MAAiB;QAClC,KAAK,EAAE,CAAC;QADS,WAAM,GAAN,MAAM,CAAW;QAf3B,kBAAa,GAAY,IAAI,CAAC;QAK7B,WAAM,GAAsB,IAAI,uDAAY,EAAE,CAAC;QAC/C,SAAI,GAAsB,IAAI,uDAAY,EAAE,CAAC;QAC7C,WAAM,GAAsB,IAAI,uDAAY,EAAE,CAAC;QAC/C,WAAM,GAAsB,IAAI,uDAAY,EAAE,CAAC;QAC/C,WAAM,GAAsB,IAAI,uDAAY,EAAE,CAAC;IAQzD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,+CAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,SAAS,CACtE,GAAG,EAAE;YACH,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,OAAO;aACR;YACD,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;QAC3D,CAAC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClE,CAAC;IAED,GAAG;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ,CAAC,KAAK;QACZ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,eAAe;QACb,MAAM,mBAAmB,GAAG,IAAI,yEAAgB,EAAE,CAAC;QAEnD,mBAAmB,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;QAE3D,OAAO,mBAAmB,CAAC;IAC7B,CAAC;;wFA7DU,oBAAoB;kHAApB,oBAAoB;kEAapB,qEAAY;kEACZ,2DAAO;;;;;;;;QCrCpB,yEAA8B;QAC5B,yEAAiC;QAC/B,yEAAiB;QACf,yEAAmB;QACjB,wEAAqC;QACnC,wEAA4B;QAC1B,2EAA0B;QAAA,uEAAsC;QAAA,iEAAM;QAAA,4DAAI;QAAA,4DAAQ;QAClF,yEAC0B;QAC5B,4DAAK;QACP,4DAAK;QACP,4DAAM;QACN,0EAAmB;QACjB,0EAA2B;QACzB,sEAAI;QACF,2EAA8B;QAC5B,yHAES;QACX,4DAAM;QACR,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,qFAA2F;QACzF,qIAmBe;QAGf,yIAAqE;QACzD,2HAEF;QAYZ,4DAAY;QAEZ,mHAEM;QAGN,mHAGM;QAEN,mHAEM;QACN,oFACgB;QAClB,4DAAM;;QAhE8D,2DAAmB;QAAnB,mFAAmB;QASnE,0DAAyB;QAAzB,sFAAyB;QACR,0DAAU;QAAV,gFAAU;QAsB1B,0DAAiC;QAAjC,iGAAiC;QACR,0DAA0B;QAA1B,kGAA0B;QAgBlD,0DAAwD;QAAxD,uHAAwD;QAKtE,0DAAkB;QAAlB,kFAAkB;QAKlB,0DAAsB;QAAtB,sFAAsB;QAGF,0DAAyC;QAAzC,sGAAyC;yyJDhEvD;YACV,6DAAO,CAAC,cAAc,EAAE;gBACtB,2DAAK,CAAC,WAAW,EAAE,2DAAK,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;gBAC9D,2DAAK,CAAC,UAAU,EAAE,2DAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC,CAAC;gBACxC,gEAAU,CAAC,wBAAwB,EAAE,6DAAO,CAAC,sCAAsC,CAAC,CAAC;aACtF,CAAC;SACH;;;;;;;;;;;;;;;;;;;AEnBoD;AACE;;;AAEzD,MAAM,MAAM,GAAW;IACnB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAiB;KAC7B;CACF,CAAC;AAMK,MAAM,qBAAqB;;0FAArB,qBAAqB;kHAArB,qBAAqB;sHAHvB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,qBAAqB,oFAFtB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;ACXmC;AAE7B;;;;;;AAUzB,MAAM,iBAAiB;IAW5B,YACU,KAAa,EACb,eAAgC,EACjC,MAAiB;QAFhB,UAAK,GAAL,KAAK,CAAQ;QACb,oBAAe,GAAf,eAAe,CAAiB;QACjC,WAAM,GAAN,MAAM,CAAW;QAZ1B,YAAO,GAAiB;YACtB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE;YACjF,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE;SAC9E,CAAC;QAElB,eAAU,GAAG,IAAI,uEAAkB,EAAO,CAAC;QAE3C,kBAAa,GAAY,KAAK,CAAC;IAM3B,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,8CAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACjG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC/C,EAAE,EAAE,QAAQ,CAAC,EAAE;gBACf,SAAS,EAAE,QAAQ,CAAC,SAAS;aAC9B,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,KAAK;QACR,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,iCAAiC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACrE,CAAC;;kFAlCU,iBAAiB;+GAAjB,iBAAiB;QCd9B,6EAAyB;QACrB,yEAA6B;QAC3B,yEAA0B;QACxB,yEAAiB;QACf,yEAAqD;QACnD,wEAAyC;QACvC,wEAA4B;QAC1B,wEAAuB;QAAA,wEAAa;QAAA,4DAAK;QAC3C,4DAAK;QACL,wEAAqC;QACnC,wEAAgC;QAAA,oEAA2B;QAAC,iEAAI;QAAA,4DAAI;QACtE,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EAA0B;QACxB,0EAAqD;QACnD,2EAAkB;QAChB,2EAAkB;QAChB,mFAImB;QACrB,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAU;;QAVoB,2DAAyB;QAAzB,sFAAyB;;;;;;;;;;;;;;;;;;;;;;;ACnBN;AAC0B;AACP;AACJ;AACT;;AAehD,MAAM,cAAc;;4EAAd,cAAc;2GAAd,cAAc;gHALd;QACT,8EAAiB;QACjB,EAAE,OAAO,EAAE,6DAAe,EAAC;KAC5B,YAVQ;YACP,2EAAqB;YACrB,uFAAe;SAChB;mIASU,cAAc,mBAPzB,kEAAiB,aAJf,2EAAqB;QACrB,uFAAe","file":"src_app_views_employees_employee_module_ts-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Employee } from '../models/employee.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  readonly baseUrl: string;\r\n\r\n  constructor(\r\n    @Inject('BASE_URL_CHALLENGE') baseUrl: string,\r\n    private http: HttpClient) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  getAll(): Observable<Employee[]> {\r\n      console.log('Teste')\r\n    return this.http.get<Employee[]>(`${this.baseUrl}/Employee`);\r\n  }\r\n}\r\n","import { CommonModule, CurrencyPipe } from '@angular/common';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorIntl, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { CustomTableComponent } from './custom-table/custom-table.component';\r\n@NgModule({\r\n    declarations: [CustomTableComponent],\r\n    exports: [CustomTableComponent],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSortModule,\r\n        MatMenuModule,\r\n        MatTabsModule,\r\n        MatDialogModule,\r\n        MatSlideToggleModule,\r\n        MatProgressSpinnerModule\r\n    ],\r\n    providers: [\r\n        { provide: MatPaginatorIntl }\r\n    ]\r\n})\r\nexport class ComponentModule { }\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator, MatPaginatorIntl } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { fromEvent } from 'rxjs';\r\nimport { UnsubscribeOnDestroyAdapter } from '../../UnsubscribeOnDestroyAdapter';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { ListColumn } from 'src/app/core/models/ListColumn';\r\n\r\n@Component({\r\n  selector: 'app-custom-table',\r\n  templateUrl: './custom-table.component.html',\r\n  styleUrls: ['./custom-table.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0px' })),\r\n      state('expanded', style({ height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\n\r\nexport class CustomTableComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\r\n\r\n  @Input() showAddButton: boolean = true;\r\n  @Input() dataSource: MatTableDataSource<any>;\r\n  @Input() isTblLoading: boolean;\r\n  @Input() columns: ListColumn[];\r\n\r\n  @Output() addNew: EventEmitter<any> = new EventEmitter();\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n  @Output() cancel: EventEmitter<any> = new EventEmitter();\r\n  @Output() delete: EventEmitter<any> = new EventEmitter();\r\n  @Output() enable: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n\r\n  constructor(public dialog: MatDialog) {\r\n    super();\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.isTblLoading = true;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n\r\n  get displayedColumns() {\r\n    return this.columns.filter(o => o.visible).map(o => o.property);\r\n  }\r\n\r\n  add() {\r\n    this.addNew.emit();\r\n  }\r\n\r\n  editCall(event) {\r\n    this.edit.emit(event);\r\n  }\r\n\r\n  cancelCall(event) {\r\n    this.cancel.emit(event);\r\n  }\r\n\r\n  deleteItem(event) {\r\n    this.delete.emit(event);\r\n  }\r\n\r\n  customPaginator() {\r\n    const customPaginatorIntl = new MatPaginatorIntl();\r\n\r\n    customPaginatorIntl.itemsPerPageLabel = 'Itens por página';\r\n\r\n    return customPaginatorIntl;\r\n  }\r\n}\r\n","<div class=\"responsive_table\">\r\n  <div class=\"materialTableHeader\">\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <ul class=\"header-buttons-left ml-0\">\r\n          <li class=\"dropdown m-l-20\">\r\n            <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n            <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n              aria-label=\"Search box\">\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <ul class=\"header-buttons\">\r\n          <li>\r\n            <div class=\"icon-button-demo\">\r\n              <button mat-mini-fab color=\"primary\" (click)=\"add()\" *ngIf=\"showAddButton\">\r\n                <mat-icon class=\"col-white\">add</mat-icon>\r\n              </button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <mat-table #table [dataSource]=\"dataSource\" matSort multiTemplateDataRows class=\"mat-cell\">\r\n    <ng-container *ngFor=\"let column of columns\">\r\n      <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\r\n        <mat-header-cell *matHeaderCellDef mat-header-cell mat-sort-header>\r\n          {{ column.name }}</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\" mat-cell>\r\n          <ng-container *ngIf=\"column.type==='date'\">\r\n            {{ row[column.property] | date: 'dd/MM/yyyy hh:mm' }}\r\n          </ng-container>\r\n          <ng-container *ngIf=\"column.type!=='date' && column.type !== 'currency' && column.type!=='color'\">\r\n            {{ row[column.property] }}\r\n          </ng-container>\r\n          <ng-container *ngIf=\"column.type==='currency'\">\r\n            {{row[column.property] | currency:'BRL'}}\r\n          </ng-container>\r\n          <ng-container *ngIf=\"column.type==='color'\">\r\n            <div style=\"width: 20px; height: 20px; border-radius: 50%; background-color: {{row[column.property]}};\"></div>\r\n          </ng-container>\r\n        </mat-cell>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n    </mat-row>\r\n\r\n\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <mat-header-cell *matHeaderCellDef class=\"pr-0\">Editar</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n        <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n          (click)=\"editCall(row)\">\r\n          <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n    </ng-container> -->\r\n  </mat-table>\r\n  \r\n  <div class=\"empty\" *ngIf=\"!isTblLoading && this.dataSource.data.length === 0\">\r\n    Não existem dados para serem exibidos\r\n  </div>\r\n\r\n  <!-- Loading spinner -->\r\n  <div *ngIf=\"isTblLoading\" class=\"tbl-spinner\">\r\n    <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n    </mat-progress-spinner>\r\n  </div>\r\n\r\n  <div *ngIf=\"!dataSource.data\" class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n    No results\r\n  </div>\r\n  <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\">\r\n  </mat-paginator>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { EmployeeComponent } from \"./employee.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      component: EmployeeComponent\r\n    }\r\n  ];\r\n  \r\n  @NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class EmployeeRoutingModule {}\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { finalize } from 'rxjs';\r\nimport { ListColumn } from 'src/app/core/models/ListColumn';\r\nimport { EmployeeService } from 'src/app/core/service/Employee.service';\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.scss']\r\n})\r\n\r\nexport class EmployeeComponent implements OnInit {\r\n\r\n  columns: ListColumn[] = [\r\n    { name: 'Id', property: 'id', type: 'int', visible: true, isModelProperty: true },\r\n    { name: 'Nome', property: 'firstName', type: 'string', visible: true, isModelProperty: true }\r\n  ] as ListColumn[];\r\n\r\n  dataSource = new MatTableDataSource<any>();\r\n  isTblLoading: boolean;\r\n  showAddButton: boolean = false;\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private employeeService: EmployeeService,\r\n    public dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmployee();\r\n  }\r\n\r\n  getEmployee(): void {\r\n    this.isTblLoading = true;\r\n    this.dataSource.data = [];\r\n    this.employeeService.getAll().pipe(finalize(() => this.isTblLoading = false)).subscribe(employee => {\r\n      this.dataSource.data = employee.map(employee => ({\r\n        id: employee.id,\r\n        firstName: employee.firstName\r\n      }));\r\n    });\r\n  }\r\n\r\n  edit(event) {\r\n    this.route.navigate([`/activity-management/ped/form/${event.id}`]);\r\n  }\r\n}","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"block-header\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n            <ul class=\"breadcrumb breadcrumb-style \">\r\n              <li class=\"breadcrumb-item\">\r\n                <h4 class=\"page-title\">Colaboradores</h4>\r\n              </li>\r\n              <li class=\"breadcrumb-item bcrumb-1\">\r\n                <a routerLink=\"/dashboard/main\"><i class=\"fas fa-home\"></i> Home</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row clearfix\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <div class=\"card\">\r\n            <div class=\"body\">\r\n              <app-custom-table [dataSource]=\"dataSource\"\r\n                                [showAddButton]=\"showAddButton\"\r\n                                [columns]=\"columns\"\r\n                                [isTblLoading] = \"isTblLoading\">\r\n              </app-custom-table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>","import { NgModule } from \"@angular/core\";\r\nimport { OwlDateTimeIntl } from \"ng-pick-datetime\";\r\nimport { ComponentModule } from \"src/app/shared/components/component.module\";\r\nimport { SnackbarComponent } from \"../ui/snackbar/snackbar.component\";\r\nimport { EmployeeRoutingModule } from \"./employee-routing.module\";\r\nimport { EmployeeComponent } from \"./employee.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n      EmployeeRoutingModule,\r\n      ComponentModule\r\n    ],\r\n    declarations: [\r\n    EmployeeComponent\r\n    ],\r\n    providers: [\r\n      SnackbarComponent,\r\n      { provide: OwlDateTimeIntl}\r\n    ],\r\n  })\r\n  export class EmployeeModule {}\r\n"],"sourceRoot":"webpack:///"}