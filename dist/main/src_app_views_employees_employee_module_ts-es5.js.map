{"version":3,"sources":["webpack:///src/app/core/service/Employee.service.ts","webpack:///src/app/shared/components/component.module.ts","webpack:///src/app/shared/components/custom-table/custom-table.component.html","webpack:///src/app/shared/components/custom-table/custom-table.component.ts","webpack:///src/app/views/employees/employee-routing.module.ts","webpack:///src/app/views/employees/employee.component.ts","webpack:///src/app/views/employees/employee.component.html","webpack:///src/app/views/employees/employee.module.ts"],"names":["EmployeeService","baseUrl","http","console","log","get","ComponentModule","provide","MatPaginatorIntl","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatButtonModule","MatIconModule","MatSortModule","MatMenuModule","MatTabsModule","MatDialogModule","MatSlideToggleModule","MatProgressSpinnerModule","CustomTableComponent","dialog","showAddButton","addNew","EventEmitter","edit","cancel","enable","isTblLoading","dataSource","sort","paginator","subs","sink","fromEvent","filter","nativeElement","subscribe","value","columns","o","visible","map","property","emit","event","customPaginatorIntl","itemsPerPageLabel","UnsubscribeOnDestroyAdapter","MatPaginator","MatSort","trigger","state","style","height","minHeight","transition","animate","routes","path","component","EmployeeComponent","EmployeeRoutingModule","RouterModule","route","employeeService","name","type","isModelProperty","MatTableDataSource","getEmployee","data","getAll","pipe","finalize","employee","id","firstName","navigate","EmployeeModule","SnackbarComponent","OwlDateTimeIntl"],"mappings":"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","file":"src_app_views_employees_employee_module_ts-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Employee } from '../models/employee.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  readonly baseUrl: string;\r\n\r\n  constructor(\r\n    @Inject('BASE_URL_CHALLENGE') baseUrl: string,\r\n    private http: HttpClient) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  getAll(): Observable<Employee[]> {\r\n      console.log('Teste')\r\n    return this.http.get<Employee[]>(`${this.baseUrl}/Employee`);\r\n  }\r\n}\r\n","import { CommonModule, CurrencyPipe } from '@angular/common';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorIntl, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { CustomTableComponent } from './custom-table/custom-table.component';\r\n@NgModule({\r\n    declarations: [CustomTableComponent],\r\n    exports: [CustomTableComponent],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSortModule,\r\n        MatMenuModule,\r\n        MatTabsModule,\r\n        MatDialogModule,\r\n        MatSlideToggleModule,\r\n        MatProgressSpinnerModule\r\n    ],\r\n    providers: [\r\n        { provide: MatPaginatorIntl }\r\n    ]\r\n})\r\nexport class ComponentModule { }\r\n","<div class=\"responsive_table\">\r\n  <div class=\"materialTableHeader\">\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <ul class=\"header-buttons-left ml-0\">\r\n          <li class=\"dropdown m-l-20\">\r\n            <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n            <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n              aria-label=\"Search box\">\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <ul class=\"header-buttons\">\r\n          <li>\r\n            <div class=\"icon-button-demo\">\r\n              <button mat-mini-fab color=\"primary\" (click)=\"add()\" *ngIf=\"showAddButton\">\r\n                <mat-icon class=\"col-white\">add</mat-icon>\r\n              </button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <mat-table #table [dataSource]=\"dataSource\" matSort multiTemplateDataRows class=\"mat-cell\">\r\n    <ng-container *ngFor=\"let column of columns\">\r\n      <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\r\n        <mat-header-cell *matHeaderCellDef mat-header-cell mat-sort-header>\r\n          {{ column.name }}</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\" mat-cell>\r\n          <ng-container *ngIf=\"column.type==='date'\">\r\n            {{ row[column.property] | date: 'dd/MM/yyyy hh:mm' }}\r\n          </ng-container>\r\n          <ng-container *ngIf=\"column.type!=='date' && column.type !== 'currency' && column.type!=='color'\">\r\n            {{ row[column.property] }}\r\n          </ng-container>\r\n          <ng-container *ngIf=\"column.type==='currency'\">\r\n            {{row[column.property] | currency:'BRL'}}\r\n          </ng-container>\r\n          <ng-container *ngIf=\"column.type==='color'\">\r\n            <div style=\"width: 20px; height: 20px; border-radius: 50%; background-color: {{row[column.property]}};\"></div>\r\n          </ng-container>\r\n        </mat-cell>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n    </mat-row>\r\n\r\n\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <mat-header-cell *matHeaderCellDef class=\"pr-0\">Editar</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n        <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n          (click)=\"editCall(row)\">\r\n          <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n    </ng-container> -->\r\n  </mat-table>\r\n  \r\n  <div class=\"empty\" *ngIf=\"!isTblLoading && this.dataSource.data.length === 0\">\r\n    Não existem dados para serem exibidos\r\n  </div>\r\n\r\n  <!-- Loading spinner -->\r\n  <div *ngIf=\"isTblLoading\" class=\"tbl-spinner\">\r\n    <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n    </mat-progress-spinner>\r\n  </div>\r\n\r\n  <div *ngIf=\"!dataSource.data\" class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n    No results\r\n  </div>\r\n  <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\">\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator, MatPaginatorIntl } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { fromEvent } from 'rxjs';\r\nimport { UnsubscribeOnDestroyAdapter } from '../../UnsubscribeOnDestroyAdapter';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { ListColumn } from 'src/app/core/models/ListColumn';\r\n\r\n@Component({\r\n  selector: 'app-custom-table',\r\n  templateUrl: './custom-table.component.html',\r\n  styleUrls: ['./custom-table.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0px' })),\r\n      state('expanded', style({ height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\n\r\nexport class CustomTableComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\r\n\r\n  @Input() showAddButton: boolean = true;\r\n  @Input() dataSource: MatTableDataSource<any>;\r\n  @Input() isTblLoading: boolean;\r\n  @Input() columns: ListColumn[];\r\n\r\n  @Output() addNew: EventEmitter<any> = new EventEmitter();\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n  @Output() cancel: EventEmitter<any> = new EventEmitter();\r\n  @Output() delete: EventEmitter<any> = new EventEmitter();\r\n  @Output() enable: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n\r\n  constructor(public dialog: MatDialog) {\r\n    super();\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.isTblLoading = true;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n\r\n  get displayedColumns() {\r\n    return this.columns.filter(o => o.visible).map(o => o.property);\r\n  }\r\n\r\n  add() {\r\n    this.addNew.emit();\r\n  }\r\n\r\n  editCall(event) {\r\n    this.edit.emit(event);\r\n  }\r\n\r\n  cancelCall(event) {\r\n    this.cancel.emit(event);\r\n  }\r\n\r\n  deleteItem(event) {\r\n    this.delete.emit(event);\r\n  }\r\n\r\n  customPaginator() {\r\n    const customPaginatorIntl = new MatPaginatorIntl();\r\n\r\n    customPaginatorIntl.itemsPerPageLabel = 'Itens por página';\r\n\r\n    return customPaginatorIntl;\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { EmployeeComponent } from \"./employee.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      component: EmployeeComponent\r\n    }\r\n  ];\r\n  \r\n  @NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class EmployeeRoutingModule {}\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { finalize } from 'rxjs';\r\nimport { ListColumn } from 'src/app/core/models/ListColumn';\r\nimport { EmployeeService } from 'src/app/core/service/Employee.service';\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.scss']\r\n})\r\n\r\nexport class EmployeeComponent implements OnInit {\r\n\r\n  columns: ListColumn[] = [\r\n    { name: 'Id', property: 'id', type: 'int', visible: true, isModelProperty: true },\r\n    { name: 'Nome', property: 'firstName', type: 'string', visible: true, isModelProperty: true }\r\n  ] as ListColumn[];\r\n\r\n  dataSource = new MatTableDataSource<any>();\r\n  isTblLoading: boolean;\r\n  showAddButton: boolean = false;\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private employeeService: EmployeeService,\r\n    public dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmployee();\r\n  }\r\n\r\n  getEmployee(): void {\r\n    this.isTblLoading = true;\r\n    this.dataSource.data = [];\r\n    this.employeeService.getAll().pipe(finalize(() => this.isTblLoading = false)).subscribe(employee => {\r\n      this.dataSource.data = employee.map(employee => ({\r\n        id: employee.id,\r\n        firstName: employee.firstName\r\n      }));\r\n    });\r\n  }\r\n\r\n  edit(event) {\r\n    this.route.navigate([`/activity-management/ped/form/${event.id}`]);\r\n  }\r\n}","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"block-header\">\r\n        <div class=\"row\">\r\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n            <ul class=\"breadcrumb breadcrumb-style \">\r\n              <li class=\"breadcrumb-item\">\r\n                <h4 class=\"page-title\">Colaboradores</h4>\r\n              </li>\r\n              <li class=\"breadcrumb-item bcrumb-1\">\r\n                <a routerLink=\"/dashboard/main\"><i class=\"fas fa-home\"></i> Home</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row clearfix\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <div class=\"card\">\r\n            <div class=\"body\">\r\n              <app-custom-table [dataSource]=\"dataSource\"\r\n                                [showAddButton]=\"showAddButton\"\r\n                                [columns]=\"columns\"\r\n                                [isTblLoading] = \"isTblLoading\">\r\n              </app-custom-table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>","import { NgModule } from \"@angular/core\";\r\nimport { OwlDateTimeIntl } from \"ng-pick-datetime\";\r\nimport { ComponentModule } from \"src/app/shared/components/component.module\";\r\nimport { SnackbarComponent } from \"../ui/snackbar/snackbar.component\";\r\nimport { EmployeeRoutingModule } from \"./employee-routing.module\";\r\nimport { EmployeeComponent } from \"./employee.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n      EmployeeRoutingModule,\r\n      ComponentModule\r\n    ],\r\n    declarations: [\r\n    EmployeeComponent\r\n    ],\r\n    providers: [\r\n      SnackbarComponent,\r\n      { provide: OwlDateTimeIntl}\r\n    ],\r\n  })\r\n  export class EmployeeModule {}\r\n"]}